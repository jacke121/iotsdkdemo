// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: h5scommon.proto

#ifndef PROTOBUF_h5scommon_2eproto__INCLUDED
#define PROTOBUF_h5scommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class h5ClusterStatus;
class h5ClusterStatusDefaultTypeInternal;
IOT_LIBRARY_API extern h5ClusterStatusDefaultTypeInternal _h5ClusterStatus_default_instance_;
class h5PlayCmd;
class h5PlayCmdDefaultTypeInternal;
IOT_LIBRARY_API extern h5PlayCmdDefaultTypeInternal _h5PlayCmd_default_instance_;
class h5PtzAction;
class h5PtzActionDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzActionDefaultTypeInternal _h5PtzAction_default_instance_;
class h5PtzPreset;
class h5PtzPresetDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzPresetDefaultTypeInternal _h5PtzPreset_default_instance_;
class h5PtzPresetList;
class h5PtzPresetListDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzPresetListDefaultTypeInternal _h5PtzPresetList_default_instance_;
class h5Record;
class h5RecordDefaultTypeInternal;
IOT_LIBRARY_API extern h5RecordDefaultTypeInternal _h5Record_default_instance_;
class h5RecordList;
class h5RecordListDefaultTypeInternal;
IOT_LIBRARY_API extern h5RecordListDefaultTypeInternal _h5RecordList_default_instance_;
class h5Server;
class h5ServerDefaultTypeInternal;
IOT_LIBRARY_API extern h5ServerDefaultTypeInternal _h5Server_default_instance_;
class h5ServerList;
class h5ServerListDefaultTypeInternal;
IOT_LIBRARY_API extern h5ServerListDefaultTypeInternal _h5ServerList_default_instance_;
class h5Src;
class h5SrcDefaultTypeInternal;
IOT_LIBRARY_API extern h5SrcDefaultTypeInternal _h5Src_default_instance_;
class h5SrcList;
class h5SrcListDefaultTypeInternal;
IOT_LIBRARY_API extern h5SrcListDefaultTypeInternal _h5SrcList_default_instance_;
class h5Status;
class h5StatusDefaultTypeInternal;
IOT_LIBRARY_API extern h5StatusDefaultTypeInternal _h5Status_default_instance_;
class h5sClusterLoad;
class h5sClusterLoadDefaultTypeInternal;
IOT_LIBRARY_API extern h5sClusterLoadDefaultTypeInternal _h5sClusterLoad_default_instance_;
class h5sNodeServiceAddr;
class h5sNodeServiceAddrDefaultTypeInternal;
IOT_LIBRARY_API extern h5sNodeServiceAddrDefaultTypeInternal _h5sNodeServiceAddr_default_instance_;
class h5sVolume;
class h5sVolumeDefaultTypeInternal;
IOT_LIBRARY_API extern h5sVolumeDefaultTypeInternal _h5sVolume_default_instance_;
class h5sVolumeList;
class h5sVolumeListDefaultTypeInternal;
IOT_LIBRARY_API extern h5sVolumeListDefaultTypeInternal _h5sVolumeList_default_instance_;

namespace protobuf_h5scommon_2eproto {
// Internal implementation detail -- do not call these.
struct IOT_LIBRARY_API TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void IOT_LIBRARY_API AddDescriptors();
void IOT_LIBRARY_API InitDefaults();
}  // namespace protobuf_h5scommon_2eproto

enum h5StreamType {
  H5_S_MAIN = 0,
  H5_S_SUB = 1,
  h5StreamType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5StreamType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5StreamType_IsValid(int value);
const h5StreamType h5StreamType_MIN = H5_S_MAIN;
const h5StreamType h5StreamType_MAX = H5_S_SUB;
const int h5StreamType_ARRAYSIZE = h5StreamType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5StreamType_descriptor();
inline const ::std::string& h5StreamType_Name(h5StreamType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5StreamType_descriptor(), value);
}
inline bool h5StreamType_Parse(
    const ::std::string& name, h5StreamType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5StreamType>(
    h5StreamType_descriptor(), name, value);
}
enum h5SourceType {
  H5_ZERO = 0,
  H5_FILE = 1,
  H5_STREAM = 2,
  H5_ONVIF = 3,
  H5_CLOUD = 4,
  H5_IOTSDK = 5,
  h5SourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5SourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5SourceType_IsValid(int value);
const h5SourceType h5SourceType_MIN = H5_ZERO;
const h5SourceType h5SourceType_MAX = H5_IOTSDK;
const int h5SourceType_ARRAYSIZE = h5SourceType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5SourceType_descriptor();
inline const ::std::string& h5SourceType_Name(h5SourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5SourceType_descriptor(), value);
}
inline bool h5SourceType_Parse(
    const ::std::string& name, h5SourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5SourceType>(
    h5SourceType_descriptor(), name, value);
}
enum h5PtzCmd {
  H5_PTZ_UP = 0,
  H5_PTZ_DOWN = 1,
  H5_PTZ_LEFT = 2,
  H5_PTZ_RIGHT = 3,
  H5_PTZ_ZOOM_IN = 4,
  H5_PTZ_ZOOM_OUT = 5,
  H5_PTZ_STOP = 6,
  H5_PTZ_PRESET = 7,
  H5_PTZ_LAST = 8,
  h5PtzCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5PtzCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5PtzCmd_IsValid(int value);
const h5PtzCmd h5PtzCmd_MIN = H5_PTZ_UP;
const h5PtzCmd h5PtzCmd_MAX = H5_PTZ_LAST;
const int h5PtzCmd_ARRAYSIZE = h5PtzCmd_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5PtzCmd_descriptor();
inline const ::std::string& h5PtzCmd_Name(h5PtzCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5PtzCmd_descriptor(), value);
}
inline bool h5PtzCmd_Parse(
    const ::std::string& name, h5PtzCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5PtzCmd>(
    h5PtzCmd_descriptor(), name, value);
}
enum h5SourceConnectType {
  H5_ALWAYS = 0,
  H5_ONDEMAND = 1,
  H5_AUTO = 2,
  h5SourceConnectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5SourceConnectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5SourceConnectType_IsValid(int value);
const h5SourceConnectType h5SourceConnectType_MIN = H5_ALWAYS;
const h5SourceConnectType h5SourceConnectType_MAX = H5_AUTO;
const int h5SourceConnectType_ARRAYSIZE = h5SourceConnectType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5SourceConnectType_descriptor();
inline const ::std::string& h5SourceConnectType_Name(h5SourceConnectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5SourceConnectType_descriptor(), value);
}
inline bool h5SourceConnectType_Parse(
    const ::std::string& name, h5SourceConnectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5SourceConnectType>(
    h5SourceConnectType_descriptor(), name, value);
}
enum h5HLSSinkType {
  H5_HLS_NONE = 0,
  H5_HLS_V1 = 1,
  H5_HLS_V2 = 2,
  h5HLSSinkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5HLSSinkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5HLSSinkType_IsValid(int value);
const h5HLSSinkType h5HLSSinkType_MIN = H5_HLS_NONE;
const h5HLSSinkType h5HLSSinkType_MAX = H5_HLS_V2;
const int h5HLSSinkType_ARRAYSIZE = h5HLSSinkType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5HLSSinkType_descriptor();
inline const ::std::string& h5HLSSinkType_Name(h5HLSSinkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5HLSSinkType_descriptor(), value);
}
inline bool h5HLSSinkType_Parse(
    const ::std::string& name, h5HLSSinkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5HLSSinkType>(
    h5HLSSinkType_descriptor(), name, value);
}
enum h5LogType {
  H5_LOG_INFO = 0,
  H5_LOG_DEBUG = 1,
  H5_LOG_WARNING = 2,
  H5_LOG_ERROR = 3,
  h5LogType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5LogType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5LogType_IsValid(int value);
const h5LogType h5LogType_MIN = H5_LOG_INFO;
const h5LogType h5LogType_MAX = H5_LOG_ERROR;
const int h5LogType_ARRAYSIZE = h5LogType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5LogType_descriptor();
inline const ::std::string& h5LogType_Name(h5LogType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5LogType_descriptor(), value);
}
inline bool h5LogType_Parse(
    const ::std::string& name, h5LogType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5LogType>(
    h5LogType_descriptor(), name, value);
}
enum h5RTSPConnectType {
  H5_RTSP_TCP = 0,
  H5_RTSP_UDP = 1,
  H5_RTSP_HTTP = 2,
  H5_RTSP_HTTPS = 3,
  H5_RTSP_AUTO = 4,
  h5RTSPConnectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5RTSPConnectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5RTSPConnectType_IsValid(int value);
const h5RTSPConnectType h5RTSPConnectType_MIN = H5_RTSP_TCP;
const h5RTSPConnectType h5RTSPConnectType_MAX = H5_RTSP_AUTO;
const int h5RTSPConnectType_ARRAYSIZE = h5RTSPConnectType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5RTSPConnectType_descriptor();
inline const ::std::string& h5RTSPConnectType_Name(h5RTSPConnectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5RTSPConnectType_descriptor(), value);
}
inline bool h5RTSPConnectType_Parse(
    const ::std::string& name, h5RTSPConnectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5RTSPConnectType>(
    h5RTSPConnectType_descriptor(), name, value);
}
enum h5PlayCmdType {
  H5_KEEPALIVE = 0,
  H5_RESUME = 1,
  H5_PAUSE = 2,
  H5_SEEK = 3,
  H5_SPEED = 4,
  h5PlayCmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  h5PlayCmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool h5PlayCmdType_IsValid(int value);
const h5PlayCmdType h5PlayCmdType_MIN = H5_KEEPALIVE;
const h5PlayCmdType h5PlayCmdType_MAX = H5_SPEED;
const int h5PlayCmdType_ARRAYSIZE = h5PlayCmdType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* h5PlayCmdType_descriptor();
inline const ::std::string& h5PlayCmdType_Name(h5PlayCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    h5PlayCmdType_descriptor(), value);
}
inline bool h5PlayCmdType_Parse(
    const ::std::string& name, h5PlayCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<h5PlayCmdType>(
    h5PlayCmdType_descriptor(), name, value);
}
// ===================================================================

class IOT_LIBRARY_API h5Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5Status) */ {
 public:
  h5Status();
  virtual ~h5Status();

  h5Status(const h5Status& from);

  inline h5Status& operator=(const h5Status& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5Status& default_instance();

  static inline const h5Status* internal_default_instance() {
    return reinterpret_cast<const h5Status*>(
               &_h5Status_default_instance_);
  }

  void Swap(h5Status* other);

  // implements Message ----------------------------------------------

  inline h5Status* New() const PROTOBUF_FINAL { return New(NULL); }

  h5Status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5Status& from);
  void MergeFrom(const h5Status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strCode = 2;
  void clear_strcode();
  static const int kStrCodeFieldNumber = 2;
  const ::std::string& strcode() const;
  void set_strcode(const ::std::string& value);
  #if LANG_CXX11
  void set_strcode(::std::string&& value);
  #endif
  void set_strcode(const char* value);
  void set_strcode(const char* value, size_t size);
  ::std::string* mutable_strcode();
  ::std::string* release_strcode();
  void set_allocated_strcode(::std::string* strcode);

  // bool bStatus = 1;
  void clear_bstatus();
  static const int kBStatusFieldNumber = 1;
  bool bstatus() const;
  void set_bstatus(bool value);

  // @@protoc_insertion_point(class_scope:h5Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strcode_;
  bool bstatus_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5PtzAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5PtzAction) */ {
 public:
  h5PtzAction();
  virtual ~h5PtzAction();

  h5PtzAction(const h5PtzAction& from);

  inline h5PtzAction& operator=(const h5PtzAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5PtzAction& default_instance();

  static inline const h5PtzAction* internal_default_instance() {
    return reinterpret_cast<const h5PtzAction*>(
               &_h5PtzAction_default_instance_);
  }

  void Swap(h5PtzAction* other);

  // implements Message ----------------------------------------------

  inline h5PtzAction* New() const PROTOBUF_FINAL { return New(NULL); }

  h5PtzAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5PtzAction& from);
  void MergeFrom(const h5PtzAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5PtzAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strPreset = 3;
  void clear_strpreset();
  static const int kStrPresetFieldNumber = 3;
  const ::std::string& strpreset() const;
  void set_strpreset(const ::std::string& value);
  #if LANG_CXX11
  void set_strpreset(::std::string&& value);
  #endif
  void set_strpreset(const char* value);
  void set_strpreset(const char* value, size_t size);
  ::std::string* mutable_strpreset();
  ::std::string* release_strpreset();
  void set_allocated_strpreset(::std::string* strpreset);

  // .h5PtzCmd cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::h5PtzCmd cmd() const;
  void set_cmd(::h5PtzCmd value);

  // float nSpeed = 2;
  void clear_nspeed();
  static const int kNSpeedFieldNumber = 2;
  float nspeed() const;
  void set_nspeed(float value);

  // @@protoc_insertion_point(class_scope:h5PtzAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strpreset_;
  int cmd_;
  float nspeed_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5PlayCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5PlayCmd) */ {
 public:
  h5PlayCmd();
  virtual ~h5PlayCmd();

  h5PlayCmd(const h5PlayCmd& from);

  inline h5PlayCmd& operator=(const h5PlayCmd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5PlayCmd& default_instance();

  static inline const h5PlayCmd* internal_default_instance() {
    return reinterpret_cast<const h5PlayCmd*>(
               &_h5PlayCmd_default_instance_);
  }

  void Swap(h5PlayCmd* other);

  // implements Message ----------------------------------------------

  inline h5PlayCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  h5PlayCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5PlayCmd& from);
  void MergeFrom(const h5PlayCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5PlayCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .h5PlayCmdType cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::h5PlayCmdType cmd() const;
  void set_cmd(::h5PlayCmdType value);

  // float nSpeed = 2;
  void clear_nspeed();
  static const int kNSpeedFieldNumber = 2;
  float nspeed() const;
  void set_nspeed(float value);

  // int64 nTime = 3;
  void clear_ntime();
  static const int kNTimeFieldNumber = 3;
  ::google::protobuf::int64 ntime() const;
  void set_ntime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:h5PlayCmd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int cmd_;
  float nspeed_;
  ::google::protobuf::int64 ntime_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5Src : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5Src) */ {
 public:
  h5Src();
  virtual ~h5Src();

  h5Src(const h5Src& from);

  inline h5Src& operator=(const h5Src& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5Src& default_instance();

  static inline const h5Src* internal_default_instance() {
    return reinterpret_cast<const h5Src*>(
               &_h5Src_default_instance_);
  }

  void Swap(h5Src* other);

  // implements Message ----------------------------------------------

  inline h5Src* New() const PROTOBUF_FINAL { return New(NULL); }

  h5Src* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5Src& from);
  void MergeFrom(const h5Src& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5Src* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strName = 2;
  void clear_strname();
  static const int kStrNameFieldNumber = 2;
  const ::std::string& strname() const;
  void set_strname(const ::std::string& value);
  #if LANG_CXX11
  void set_strname(::std::string&& value);
  #endif
  void set_strname(const char* value);
  void set_strname(const char* value, size_t size);
  ::std::string* mutable_strname();
  ::std::string* release_strname();
  void set_allocated_strname(::std::string* strname);

  // string strToken = 3;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 3;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // string strUrl = 4;
  void clear_strurl();
  static const int kStrUrlFieldNumber = 4;
  const ::std::string& strurl() const;
  void set_strurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strurl(::std::string&& value);
  #endif
  void set_strurl(const char* value);
  void set_strurl(const char* value, size_t size);
  ::std::string* mutable_strurl();
  ::std::string* release_strurl();
  void set_allocated_strurl(::std::string* strurl);

  // string strUser = 5;
  void clear_struser();
  static const int kStrUserFieldNumber = 5;
  const ::std::string& struser() const;
  void set_struser(const ::std::string& value);
  #if LANG_CXX11
  void set_struser(::std::string&& value);
  #endif
  void set_struser(const char* value);
  void set_struser(const char* value, size_t size);
  ::std::string* mutable_struser();
  ::std::string* release_struser();
  void set_allocated_struser(::std::string* struser);

  // string strPasswd = 6;
  void clear_strpasswd();
  static const int kStrPasswdFieldNumber = 6;
  const ::std::string& strpasswd() const;
  void set_strpasswd(const ::std::string& value);
  #if LANG_CXX11
  void set_strpasswd(::std::string&& value);
  #endif
  void set_strpasswd(const char* value);
  void set_strpasswd(const char* value, size_t size);
  ::std::string* mutable_strpasswd();
  ::std::string* release_strpasswd();
  void set_allocated_strpasswd(::std::string* strpasswd);

  // string strSrcIpAddress = 103;
  void clear_strsrcipaddress();
  static const int kStrSrcIpAddressFieldNumber = 103;
  const ::std::string& strsrcipaddress() const;
  void set_strsrcipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_strsrcipaddress(::std::string&& value);
  #endif
  void set_strsrcipaddress(const char* value);
  void set_strsrcipaddress(const char* value, size_t size);
  ::std::string* mutable_strsrcipaddress();
  ::std::string* release_strsrcipaddress();
  void set_allocated_strsrcipaddress(::std::string* strsrcipaddress);

  // string strSrcPort = 104;
  void clear_strsrcport();
  static const int kStrSrcPortFieldNumber = 104;
  const ::std::string& strsrcport() const;
  void set_strsrcport(const ::std::string& value);
  #if LANG_CXX11
  void set_strsrcport(::std::string&& value);
  #endif
  void set_strsrcport(const char* value);
  void set_strsrcport(const char* value, size_t size);
  ::std::string* mutable_strsrcport();
  ::std::string* release_strsrcport();
  void set_allocated_strsrcport(::std::string* strsrcport);

  // string strOnvifAddr = 201;
  void clear_stronvifaddr();
  static const int kStrOnvifAddrFieldNumber = 201;
  const ::std::string& stronvifaddr() const;
  void set_stronvifaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_stronvifaddr(::std::string&& value);
  #endif
  void set_stronvifaddr(const char* value);
  void set_stronvifaddr(const char* value, size_t size);
  ::std::string* mutable_stronvifaddr();
  ::std::string* release_stronvifaddr();
  void set_allocated_stronvifaddr(::std::string* stronvifaddr);

  // string strOnvifProfileMain = 202;
  void clear_stronvifprofilemain();
  static const int kStrOnvifProfileMainFieldNumber = 202;
  const ::std::string& stronvifprofilemain() const;
  void set_stronvifprofilemain(const ::std::string& value);
  #if LANG_CXX11
  void set_stronvifprofilemain(::std::string&& value);
  #endif
  void set_stronvifprofilemain(const char* value);
  void set_stronvifprofilemain(const char* value, size_t size);
  ::std::string* mutable_stronvifprofilemain();
  ::std::string* release_stronvifprofilemain();
  void set_allocated_stronvifprofilemain(::std::string* stronvifprofilemain);

  // string strOnvifProfileSub = 203;
  void clear_stronvifprofilesub();
  static const int kStrOnvifProfileSubFieldNumber = 203;
  const ::std::string& stronvifprofilesub() const;
  void set_stronvifprofilesub(const ::std::string& value);
  #if LANG_CXX11
  void set_stronvifprofilesub(::std::string&& value);
  #endif
  void set_stronvifprofilesub(const char* value);
  void set_stronvifprofilesub(const char* value, size_t size);
  ::std::string* mutable_stronvifprofilesub();
  ::std::string* release_stronvifprofilesub();
  void set_allocated_stronvifprofilesub(::std::string* stronvifprofilesub);

  // string strSnapshotUrl = 501;
  void clear_strsnapshoturl();
  static const int kStrSnapshotUrlFieldNumber = 501;
  const ::std::string& strsnapshoturl() const;
  void set_strsnapshoturl(const ::std::string& value);
  #if LANG_CXX11
  void set_strsnapshoturl(::std::string&& value);
  #endif
  void set_strsnapshoturl(const char* value);
  void set_strsnapshoturl(const char* value, size_t size);
  ::std::string* mutable_strsnapshoturl();
  ::std::string* release_strsnapshoturl();
  void set_allocated_strsnapshoturl(::std::string* strsnapshoturl);

  // string strServerToken = 601;
  void clear_strservertoken();
  static const int kStrServerTokenFieldNumber = 601;
  const ::std::string& strservertoken() const;
  void set_strservertoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strservertoken(::std::string&& value);
  #endif
  void set_strservertoken(const char* value);
  void set_strservertoken(const char* value, size_t size);
  ::std::string* mutable_strservertoken();
  ::std::string* release_strservertoken();
  void set_allocated_strservertoken(::std::string* strservertoken);

  // string strOriginalToken = 602;
  void clear_stroriginaltoken();
  static const int kStrOriginalTokenFieldNumber = 602;
  const ::std::string& stroriginaltoken() const;
  void set_stroriginaltoken(const ::std::string& value);
  #if LANG_CXX11
  void set_stroriginaltoken(::std::string&& value);
  #endif
  void set_stroriginaltoken(const char* value);
  void set_stroriginaltoken(const char* value, size_t size);
  ::std::string* mutable_stroriginaltoken();
  ::std::string* release_stroriginaltoken();
  void set_allocated_stroriginaltoken(::std::string* stroriginaltoken);

  // string strServerUuid = 603;
  void clear_strserveruuid();
  static const int kStrServerUuidFieldNumber = 603;
  const ::std::string& strserveruuid() const;
  void set_strserveruuid(const ::std::string& value);
  #if LANG_CXX11
  void set_strserveruuid(::std::string&& value);
  #endif
  void set_strserveruuid(const char* value);
  void set_strserveruuid(const char* value, size_t size);
  ::std::string* mutable_strserveruuid();
  ::std::string* release_strserveruuid();
  void set_allocated_strserveruuid(::std::string* strserveruuid);

  // .h5SourceType nType = 1;
  void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  ::h5SourceType ntype() const;
  void set_ntype(::h5SourceType value);

  // .h5SourceConnectType nConnectType = 101;
  void clear_nconnecttype();
  static const int kNConnectTypeFieldNumber = 101;
  ::h5SourceConnectType nconnecttype() const;
  void set_nconnecttype(::h5SourceConnectType value);

  // .h5RTSPConnectType nRTSPType = 102;
  void clear_nrtsptype();
  static const int kNRTSPTypeFieldNumber = 102;
  ::h5RTSPConnectType nrtsptype() const;
  void set_nrtsptype(::h5RTSPConnectType value);

  // bool bPasswdEncrypt = 7;
  void clear_bpasswdencrypt();
  static const int kBPasswdEncryptFieldNumber = 7;
  bool bpasswdencrypt() const;
  void set_bpasswdencrypt(bool value);

  // bool bEnableAudio = 100;
  void clear_benableaudio();
  static const int kBEnableAudioFieldNumber = 100;
  bool benableaudio() const;
  void set_benableaudio(bool value);

  // bool bOnvifProfileAuto = 200;
  void clear_bonvifprofileauto();
  static const int kBOnvifProfileAutoFieldNumber = 200;
  bool bonvifprofileauto() const;
  void set_bonvifprofileauto(bool value);

  // bool bRTSPPlayback = 204;
  void clear_brtspplayback();
  static const int kBRTSPPlaybackFieldNumber = 204;
  bool brtspplayback() const;
  void set_brtspplayback(bool value);

  // int32 nChannelNumber = 105;
  void clear_nchannelnumber();
  static const int kNChannelNumberFieldNumber = 105;
  ::google::protobuf::int32 nchannelnumber() const;
  void set_nchannelnumber(::google::protobuf::int32 value);

  // float nRTSPPlaybackSpeed = 205;
  void clear_nrtspplaybackspeed();
  static const int kNRTSPPlaybackSpeedFieldNumber = 205;
  float nrtspplaybackspeed() const;
  void set_nrtspplaybackspeed(float value);

  // bool bOnline = 500;
  void clear_bonline();
  static const int kBOnlineFieldNumber = 500;
  bool bonline() const;
  void set_bonline(bool value);

  // bool bRec = 502;
  void clear_brec();
  static const int kBRecFieldNumber = 502;
  bool brec() const;
  void set_brec(bool value);

  // @@protoc_insertion_point(class_scope:h5Src)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strname_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::google::protobuf::internal::ArenaStringPtr strurl_;
  ::google::protobuf::internal::ArenaStringPtr struser_;
  ::google::protobuf::internal::ArenaStringPtr strpasswd_;
  ::google::protobuf::internal::ArenaStringPtr strsrcipaddress_;
  ::google::protobuf::internal::ArenaStringPtr strsrcport_;
  ::google::protobuf::internal::ArenaStringPtr stronvifaddr_;
  ::google::protobuf::internal::ArenaStringPtr stronvifprofilemain_;
  ::google::protobuf::internal::ArenaStringPtr stronvifprofilesub_;
  ::google::protobuf::internal::ArenaStringPtr strsnapshoturl_;
  ::google::protobuf::internal::ArenaStringPtr strservertoken_;
  ::google::protobuf::internal::ArenaStringPtr stroriginaltoken_;
  ::google::protobuf::internal::ArenaStringPtr strserveruuid_;
  int ntype_;
  int nconnecttype_;
  int nrtsptype_;
  bool bpasswdencrypt_;
  bool benableaudio_;
  bool bonvifprofileauto_;
  bool brtspplayback_;
  ::google::protobuf::int32 nchannelnumber_;
  float nrtspplaybackspeed_;
  bool bonline_;
  bool brec_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5SrcList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5SrcList) */ {
 public:
  h5SrcList();
  virtual ~h5SrcList();

  h5SrcList(const h5SrcList& from);

  inline h5SrcList& operator=(const h5SrcList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5SrcList& default_instance();

  static inline const h5SrcList* internal_default_instance() {
    return reinterpret_cast<const h5SrcList*>(
               &_h5SrcList_default_instance_);
  }

  void Swap(h5SrcList* other);

  // implements Message ----------------------------------------------

  inline h5SrcList* New() const PROTOBUF_FINAL { return New(NULL); }

  h5SrcList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5SrcList& from);
  void MergeFrom(const h5SrcList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5SrcList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5Src src = 1;
  int src_size() const;
  void clear_src();
  static const int kSrcFieldNumber = 1;
  const ::h5Src& src(int index) const;
  ::h5Src* mutable_src(int index);
  ::h5Src* add_src();
  ::google::protobuf::RepeatedPtrField< ::h5Src >*
      mutable_src();
  const ::google::protobuf::RepeatedPtrField< ::h5Src >&
      src() const;

  // @@protoc_insertion_point(class_scope:h5SrcList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5Src > src_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5Record : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5Record) */ {
 public:
  h5Record();
  virtual ~h5Record();

  h5Record(const h5Record& from);

  inline h5Record& operator=(const h5Record& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5Record& default_instance();

  static inline const h5Record* internal_default_instance() {
    return reinterpret_cast<const h5Record*>(
               &_h5Record_default_instance_);
  }

  void Swap(h5Record* other);

  // implements Message ----------------------------------------------

  inline h5Record* New() const PROTOBUF_FINAL { return New(NULL); }

  h5Record* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5Record& from);
  void MergeFrom(const h5Record& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5Record* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // string strStartTime = 2;
  void clear_strstarttime();
  static const int kStrStartTimeFieldNumber = 2;
  const ::std::string& strstarttime() const;
  void set_strstarttime(const ::std::string& value);
  #if LANG_CXX11
  void set_strstarttime(::std::string&& value);
  #endif
  void set_strstarttime(const char* value);
  void set_strstarttime(const char* value, size_t size);
  ::std::string* mutable_strstarttime();
  ::std::string* release_strstarttime();
  void set_allocated_strstarttime(::std::string* strstarttime);

  // string strDuration = 3;
  void clear_strduration();
  static const int kStrDurationFieldNumber = 3;
  const ::std::string& strduration() const;
  void set_strduration(const ::std::string& value);
  #if LANG_CXX11
  void set_strduration(::std::string&& value);
  #endif
  void set_strduration(const char* value);
  void set_strduration(const char* value, size_t size);
  ::std::string* mutable_strduration();
  ::std::string* release_strduration();
  void set_allocated_strduration(::std::string* strduration);

  // string strPath = 4;
  void clear_strpath();
  static const int kStrPathFieldNumber = 4;
  const ::std::string& strpath() const;
  void set_strpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strpath(::std::string&& value);
  #endif
  void set_strpath(const char* value);
  void set_strpath(const char* value, size_t size);
  ::std::string* mutable_strpath();
  ::std::string* release_strpath();
  void set_allocated_strpath(::std::string* strpath);

  // @@protoc_insertion_point(class_scope:h5Record)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::google::protobuf::internal::ArenaStringPtr strstarttime_;
  ::google::protobuf::internal::ArenaStringPtr strduration_;
  ::google::protobuf::internal::ArenaStringPtr strpath_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5RecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5RecordList) */ {
 public:
  h5RecordList();
  virtual ~h5RecordList();

  h5RecordList(const h5RecordList& from);

  inline h5RecordList& operator=(const h5RecordList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5RecordList& default_instance();

  static inline const h5RecordList* internal_default_instance() {
    return reinterpret_cast<const h5RecordList*>(
               &_h5RecordList_default_instance_);
  }

  void Swap(h5RecordList* other);

  // implements Message ----------------------------------------------

  inline h5RecordList* New() const PROTOBUF_FINAL { return New(NULL); }

  h5RecordList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5RecordList& from);
  void MergeFrom(const h5RecordList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5RecordList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5Record record = 1;
  int record_size() const;
  void clear_record();
  static const int kRecordFieldNumber = 1;
  const ::h5Record& record(int index) const;
  ::h5Record* mutable_record(int index);
  ::h5Record* add_record();
  ::google::protobuf::RepeatedPtrField< ::h5Record >*
      mutable_record();
  const ::google::protobuf::RepeatedPtrField< ::h5Record >&
      record() const;

  // @@protoc_insertion_point(class_scope:h5RecordList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5Record > record_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5Server) */ {
 public:
  h5Server();
  virtual ~h5Server();

  h5Server(const h5Server& from);

  inline h5Server& operator=(const h5Server& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5Server& default_instance();

  static inline const h5Server* internal_default_instance() {
    return reinterpret_cast<const h5Server*>(
               &_h5Server_default_instance_);
  }

  void Swap(h5Server* other);

  // implements Message ----------------------------------------------

  inline h5Server* New() const PROTOBUF_FINAL { return New(NULL); }

  h5Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5Server& from);
  void MergeFrom(const h5Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strServerName = 1;
  void clear_strservername();
  static const int kStrServerNameFieldNumber = 1;
  const ::std::string& strservername() const;
  void set_strservername(const ::std::string& value);
  #if LANG_CXX11
  void set_strservername(::std::string&& value);
  #endif
  void set_strservername(const char* value);
  void set_strservername(const char* value, size_t size);
  ::std::string* mutable_strservername();
  ::std::string* release_strservername();
  void set_allocated_strservername(::std::string* strservername);

  // string strServerToken = 2;
  void clear_strservertoken();
  static const int kStrServerTokenFieldNumber = 2;
  const ::std::string& strservertoken() const;
  void set_strservertoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strservertoken(::std::string&& value);
  #endif
  void set_strservertoken(const char* value);
  void set_strservertoken(const char* value, size_t size);
  ::std::string* mutable_strservertoken();
  ::std::string* release_strservertoken();
  void set_allocated_strservertoken(::std::string* strservertoken);

  // string strServerIp = 3;
  void clear_strserverip();
  static const int kStrServerIpFieldNumber = 3;
  const ::std::string& strserverip() const;
  void set_strserverip(const ::std::string& value);
  #if LANG_CXX11
  void set_strserverip(::std::string&& value);
  #endif
  void set_strserverip(const char* value);
  void set_strserverip(const char* value, size_t size);
  ::std::string* mutable_strserverip();
  ::std::string* release_strserverip();
  void set_allocated_strserverip(::std::string* strserverip);

  // bool bOnline = 4;
  void clear_bonline();
  static const int kBOnlineFieldNumber = 4;
  bool bonline() const;
  void set_bonline(bool value);

  // @@protoc_insertion_point(class_scope:h5Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strservername_;
  ::google::protobuf::internal::ArenaStringPtr strservertoken_;
  ::google::protobuf::internal::ArenaStringPtr strserverip_;
  bool bonline_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5ServerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5ServerList) */ {
 public:
  h5ServerList();
  virtual ~h5ServerList();

  h5ServerList(const h5ServerList& from);

  inline h5ServerList& operator=(const h5ServerList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5ServerList& default_instance();

  static inline const h5ServerList* internal_default_instance() {
    return reinterpret_cast<const h5ServerList*>(
               &_h5ServerList_default_instance_);
  }

  void Swap(h5ServerList* other);

  // implements Message ----------------------------------------------

  inline h5ServerList* New() const PROTOBUF_FINAL { return New(NULL); }

  h5ServerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5ServerList& from);
  void MergeFrom(const h5ServerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5ServerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5Server server = 1;
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 1;
  const ::h5Server& server(int index) const;
  ::h5Server* mutable_server(int index);
  ::h5Server* add_server();
  ::google::protobuf::RepeatedPtrField< ::h5Server >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::h5Server >&
      server() const;

  // @@protoc_insertion_point(class_scope:h5ServerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5Server > server_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5PtzPreset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5PtzPreset) */ {
 public:
  h5PtzPreset();
  virtual ~h5PtzPreset();

  h5PtzPreset(const h5PtzPreset& from);

  inline h5PtzPreset& operator=(const h5PtzPreset& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5PtzPreset& default_instance();

  static inline const h5PtzPreset* internal_default_instance() {
    return reinterpret_cast<const h5PtzPreset*>(
               &_h5PtzPreset_default_instance_);
  }

  void Swap(h5PtzPreset* other);

  // implements Message ----------------------------------------------

  inline h5PtzPreset* New() const PROTOBUF_FINAL { return New(NULL); }

  h5PtzPreset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5PtzPreset& from);
  void MergeFrom(const h5PtzPreset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5PtzPreset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strName = 1;
  void clear_strname();
  static const int kStrNameFieldNumber = 1;
  const ::std::string& strname() const;
  void set_strname(const ::std::string& value);
  #if LANG_CXX11
  void set_strname(::std::string&& value);
  #endif
  void set_strname(const char* value);
  void set_strname(const char* value, size_t size);
  ::std::string* mutable_strname();
  ::std::string* release_strname();
  void set_allocated_strname(::std::string* strname);

  // string strToken = 2;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 2;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // @@protoc_insertion_point(class_scope:h5PtzPreset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strname_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5PtzPresetList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5PtzPresetList) */ {
 public:
  h5PtzPresetList();
  virtual ~h5PtzPresetList();

  h5PtzPresetList(const h5PtzPresetList& from);

  inline h5PtzPresetList& operator=(const h5PtzPresetList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5PtzPresetList& default_instance();

  static inline const h5PtzPresetList* internal_default_instance() {
    return reinterpret_cast<const h5PtzPresetList*>(
               &_h5PtzPresetList_default_instance_);
  }

  void Swap(h5PtzPresetList* other);

  // implements Message ----------------------------------------------

  inline h5PtzPresetList* New() const PROTOBUF_FINAL { return New(NULL); }

  h5PtzPresetList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5PtzPresetList& from);
  void MergeFrom(const h5PtzPresetList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5PtzPresetList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5PtzPreset preset = 1;
  int preset_size() const;
  void clear_preset();
  static const int kPresetFieldNumber = 1;
  const ::h5PtzPreset& preset(int index) const;
  ::h5PtzPreset* mutable_preset(int index);
  ::h5PtzPreset* add_preset();
  ::google::protobuf::RepeatedPtrField< ::h5PtzPreset >*
      mutable_preset();
  const ::google::protobuf::RepeatedPtrField< ::h5PtzPreset >&
      preset() const;

  // @@protoc_insertion_point(class_scope:h5PtzPresetList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5PtzPreset > preset_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5ClusterStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5ClusterStatus) */ {
 public:
  h5ClusterStatus();
  virtual ~h5ClusterStatus();

  h5ClusterStatus(const h5ClusterStatus& from);

  inline h5ClusterStatus& operator=(const h5ClusterStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5ClusterStatus& default_instance();

  static inline const h5ClusterStatus* internal_default_instance() {
    return reinterpret_cast<const h5ClusterStatus*>(
               &_h5ClusterStatus_default_instance_);
  }

  void Swap(h5ClusterStatus* other);

  // implements Message ----------------------------------------------

  inline h5ClusterStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  h5ClusterStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5ClusterStatus& from);
  void MergeFrom(const h5ClusterStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5ClusterStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bEnable = 1;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:h5ClusterStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool benable_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5sClusterLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5sClusterLoad) */ {
 public:
  h5sClusterLoad();
  virtual ~h5sClusterLoad();

  h5sClusterLoad(const h5sClusterLoad& from);

  inline h5sClusterLoad& operator=(const h5sClusterLoad& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5sClusterLoad& default_instance();

  static inline const h5sClusterLoad* internal_default_instance() {
    return reinterpret_cast<const h5sClusterLoad*>(
               &_h5sClusterLoad_default_instance_);
  }

  void Swap(h5sClusterLoad* other);

  // implements Message ----------------------------------------------

  inline h5sClusterLoad* New() const PROTOBUF_FINAL { return New(NULL); }

  h5sClusterLoad* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5sClusterLoad& from);
  void MergeFrom(const h5sClusterLoad& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5sClusterLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nCPU = 1;
  void clear_ncpu();
  static const int kNCPUFieldNumber = 1;
  ::google::protobuf::int32 ncpu() const;
  void set_ncpu(::google::protobuf::int32 value);

  // int32 nMem = 2;
  void clear_nmem();
  static const int kNMemFieldNumber = 2;
  ::google::protobuf::int32 nmem() const;
  void set_nmem(::google::protobuf::int32 value);

  // int64 nNetInK = 3;
  void clear_nnetink();
  static const int kNNetInKFieldNumber = 3;
  ::google::protobuf::int64 nnetink() const;
  void set_nnetink(::google::protobuf::int64 value);

  // int64 nNetOutK = 4;
  void clear_nnetoutk();
  static const int kNNetOutKFieldNumber = 4;
  ::google::protobuf::int64 nnetoutk() const;
  void set_nnetoutk(::google::protobuf::int64 value);

  // int32 nIotDeviceCount = 5;
  void clear_niotdevicecount();
  static const int kNIotDeviceCountFieldNumber = 5;
  ::google::protobuf::int32 niotdevicecount() const;
  void set_niotdevicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:h5sClusterLoad)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ncpu_;
  ::google::protobuf::int32 nmem_;
  ::google::protobuf::int64 nnetink_;
  ::google::protobuf::int64 nnetoutk_;
  ::google::protobuf::int32 niotdevicecount_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5sNodeServiceAddr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5sNodeServiceAddr) */ {
 public:
  h5sNodeServiceAddr();
  virtual ~h5sNodeServiceAddr();

  h5sNodeServiceAddr(const h5sNodeServiceAddr& from);

  inline h5sNodeServiceAddr& operator=(const h5sNodeServiceAddr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5sNodeServiceAddr& default_instance();

  static inline const h5sNodeServiceAddr* internal_default_instance() {
    return reinterpret_cast<const h5sNodeServiceAddr*>(
               &_h5sNodeServiceAddr_default_instance_);
  }

  void Swap(h5sNodeServiceAddr* other);

  // implements Message ----------------------------------------------

  inline h5sNodeServiceAddr* New() const PROTOBUF_FINAL { return New(NULL); }

  h5sNodeServiceAddr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5sNodeServiceAddr& from);
  void MergeFrom(const h5sNodeServiceAddr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5sNodeServiceAddr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strNodeId = 1;
  void clear_strnodeid();
  static const int kStrNodeIdFieldNumber = 1;
  const ::std::string& strnodeid() const;
  void set_strnodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_strnodeid(::std::string&& value);
  #endif
  void set_strnodeid(const char* value);
  void set_strnodeid(const char* value, size_t size);
  ::std::string* mutable_strnodeid();
  ::std::string* release_strnodeid();
  void set_allocated_strnodeid(::std::string* strnodeid);

  // string strAddr = 2;
  void clear_straddr();
  static const int kStrAddrFieldNumber = 2;
  const ::std::string& straddr() const;
  void set_straddr(const ::std::string& value);
  #if LANG_CXX11
  void set_straddr(::std::string&& value);
  #endif
  void set_straddr(const char* value);
  void set_straddr(const char* value, size_t size);
  ::std::string* mutable_straddr();
  ::std::string* release_straddr();
  void set_allocated_straddr(::std::string* straddr);

  // int32 nPort = 3;
  void clear_nport();
  static const int kNPortFieldNumber = 3;
  ::google::protobuf::int32 nport() const;
  void set_nport(::google::protobuf::int32 value);

  // bool bOnline = 4;
  void clear_bonline();
  static const int kBOnlineFieldNumber = 4;
  bool bonline() const;
  void set_bonline(bool value);

  // @@protoc_insertion_point(class_scope:h5sNodeServiceAddr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strnodeid_;
  ::google::protobuf::internal::ArenaStringPtr straddr_;
  ::google::protobuf::int32 nport_;
  bool bonline_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5sVolume : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5sVolume) */ {
 public:
  h5sVolume();
  virtual ~h5sVolume();

  h5sVolume(const h5sVolume& from);

  inline h5sVolume& operator=(const h5sVolume& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5sVolume& default_instance();

  static inline const h5sVolume* internal_default_instance() {
    return reinterpret_cast<const h5sVolume*>(
               &_h5sVolume_default_instance_);
  }

  void Swap(h5sVolume* other);

  // implements Message ----------------------------------------------

  inline h5sVolume* New() const PROTOBUF_FINAL { return New(NULL); }

  h5sVolume* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5sVolume& from);
  void MergeFrom(const h5sVolume& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5sVolume* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strDevice = 1;
  void clear_strdevice();
  static const int kStrDeviceFieldNumber = 1;
  const ::std::string& strdevice() const;
  void set_strdevice(const ::std::string& value);
  #if LANG_CXX11
  void set_strdevice(::std::string&& value);
  #endif
  void set_strdevice(const char* value);
  void set_strdevice(const char* value, size_t size);
  ::std::string* mutable_strdevice();
  ::std::string* release_strdevice();
  void set_allocated_strdevice(::std::string* strdevice);

  // string strPath = 2;
  void clear_strpath();
  static const int kStrPathFieldNumber = 2;
  const ::std::string& strpath() const;
  void set_strpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strpath(::std::string&& value);
  #endif
  void set_strpath(const char* value);
  void set_strpath(const char* value, size_t size);
  ::std::string* mutable_strpath();
  ::std::string* release_strpath();
  void set_allocated_strpath(::std::string* strpath);

  // int64 bTotal = 3;
  void clear_btotal();
  static const int kBTotalFieldNumber = 3;
  ::google::protobuf::int64 btotal() const;
  void set_btotal(::google::protobuf::int64 value);

  // int64 bFree = 4;
  void clear_bfree();
  static const int kBFreeFieldNumber = 4;
  ::google::protobuf::int64 bfree() const;
  void set_bfree(::google::protobuf::int64 value);

  // bool bReadOnly = 5;
  void clear_breadonly();
  static const int kBReadOnlyFieldNumber = 5;
  bool breadonly() const;
  void set_breadonly(bool value);

  // @@protoc_insertion_point(class_scope:h5sVolume)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strdevice_;
  ::google::protobuf::internal::ArenaStringPtr strpath_;
  ::google::protobuf::int64 btotal_;
  ::google::protobuf::int64 bfree_;
  bool breadonly_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API h5sVolumeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:h5sVolumeList) */ {
 public:
  h5sVolumeList();
  virtual ~h5sVolumeList();

  h5sVolumeList(const h5sVolumeList& from);

  inline h5sVolumeList& operator=(const h5sVolumeList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const h5sVolumeList& default_instance();

  static inline const h5sVolumeList* internal_default_instance() {
    return reinterpret_cast<const h5sVolumeList*>(
               &_h5sVolumeList_default_instance_);
  }

  void Swap(h5sVolumeList* other);

  // implements Message ----------------------------------------------

  inline h5sVolumeList* New() const PROTOBUF_FINAL { return New(NULL); }

  h5sVolumeList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const h5sVolumeList& from);
  void MergeFrom(const h5sVolumeList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(h5sVolumeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5sVolume vol = 1;
  int vol_size() const;
  void clear_vol();
  static const int kVolFieldNumber = 1;
  const ::h5sVolume& vol(int index) const;
  ::h5sVolume* mutable_vol(int index);
  ::h5sVolume* add_vol();
  ::google::protobuf::RepeatedPtrField< ::h5sVolume >*
      mutable_vol();
  const ::google::protobuf::RepeatedPtrField< ::h5sVolume >&
      vol() const;

  // @@protoc_insertion_point(class_scope:h5sVolumeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5sVolume > vol_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// h5Status

// bool bStatus = 1;
inline void h5Status::clear_bstatus() {
  bstatus_ = false;
}
inline bool h5Status::bstatus() const {
  // @@protoc_insertion_point(field_get:h5Status.bStatus)
  return bstatus_;
}
inline void h5Status::set_bstatus(bool value) {
  
  bstatus_ = value;
  // @@protoc_insertion_point(field_set:h5Status.bStatus)
}

// string strCode = 2;
inline void h5Status::clear_strcode() {
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Status::strcode() const {
  // @@protoc_insertion_point(field_get:h5Status.strCode)
  return strcode_.GetNoArena();
}
inline void h5Status::set_strcode(const ::std::string& value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Status.strCode)
}
#if LANG_CXX11
inline void h5Status::set_strcode(::std::string&& value) {
  
  strcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Status.strCode)
}
#endif
inline void h5Status::set_strcode(const char* value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Status.strCode)
}
inline void h5Status::set_strcode(const char* value, size_t size) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Status.strCode)
}
inline ::std::string* h5Status::mutable_strcode() {
  
  // @@protoc_insertion_point(field_mutable:h5Status.strCode)
  return strcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Status::release_strcode() {
  // @@protoc_insertion_point(field_release:h5Status.strCode)
  
  return strcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Status::set_allocated_strcode(::std::string* strcode) {
  if (strcode != NULL) {
    
  } else {
    
  }
  strcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcode);
  // @@protoc_insertion_point(field_set_allocated:h5Status.strCode)
}

// -------------------------------------------------------------------

// h5PtzAction

// .h5PtzCmd cmd = 1;
inline void h5PtzAction::clear_cmd() {
  cmd_ = 0;
}
inline ::h5PtzCmd h5PtzAction::cmd() const {
  // @@protoc_insertion_point(field_get:h5PtzAction.cmd)
  return static_cast< ::h5PtzCmd >(cmd_);
}
inline void h5PtzAction::set_cmd(::h5PtzCmd value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:h5PtzAction.cmd)
}

// float nSpeed = 2;
inline void h5PtzAction::clear_nspeed() {
  nspeed_ = 0;
}
inline float h5PtzAction::nspeed() const {
  // @@protoc_insertion_point(field_get:h5PtzAction.nSpeed)
  return nspeed_;
}
inline void h5PtzAction::set_nspeed(float value) {
  
  nspeed_ = value;
  // @@protoc_insertion_point(field_set:h5PtzAction.nSpeed)
}

// string strPreset = 3;
inline void h5PtzAction::clear_strpreset() {
  strpreset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5PtzAction::strpreset() const {
  // @@protoc_insertion_point(field_get:h5PtzAction.strPreset)
  return strpreset_.GetNoArena();
}
inline void h5PtzAction::set_strpreset(const ::std::string& value) {
  
  strpreset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5PtzAction.strPreset)
}
#if LANG_CXX11
inline void h5PtzAction::set_strpreset(::std::string&& value) {
  
  strpreset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5PtzAction.strPreset)
}
#endif
inline void h5PtzAction::set_strpreset(const char* value) {
  
  strpreset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5PtzAction.strPreset)
}
inline void h5PtzAction::set_strpreset(const char* value, size_t size) {
  
  strpreset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5PtzAction.strPreset)
}
inline ::std::string* h5PtzAction::mutable_strpreset() {
  
  // @@protoc_insertion_point(field_mutable:h5PtzAction.strPreset)
  return strpreset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5PtzAction::release_strpreset() {
  // @@protoc_insertion_point(field_release:h5PtzAction.strPreset)
  
  return strpreset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5PtzAction::set_allocated_strpreset(::std::string* strpreset) {
  if (strpreset != NULL) {
    
  } else {
    
  }
  strpreset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpreset);
  // @@protoc_insertion_point(field_set_allocated:h5PtzAction.strPreset)
}

// -------------------------------------------------------------------

// h5PlayCmd

// .h5PlayCmdType cmd = 1;
inline void h5PlayCmd::clear_cmd() {
  cmd_ = 0;
}
inline ::h5PlayCmdType h5PlayCmd::cmd() const {
  // @@protoc_insertion_point(field_get:h5PlayCmd.cmd)
  return static_cast< ::h5PlayCmdType >(cmd_);
}
inline void h5PlayCmd::set_cmd(::h5PlayCmdType value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:h5PlayCmd.cmd)
}

// float nSpeed = 2;
inline void h5PlayCmd::clear_nspeed() {
  nspeed_ = 0;
}
inline float h5PlayCmd::nspeed() const {
  // @@protoc_insertion_point(field_get:h5PlayCmd.nSpeed)
  return nspeed_;
}
inline void h5PlayCmd::set_nspeed(float value) {
  
  nspeed_ = value;
  // @@protoc_insertion_point(field_set:h5PlayCmd.nSpeed)
}

// int64 nTime = 3;
inline void h5PlayCmd::clear_ntime() {
  ntime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 h5PlayCmd::ntime() const {
  // @@protoc_insertion_point(field_get:h5PlayCmd.nTime)
  return ntime_;
}
inline void h5PlayCmd::set_ntime(::google::protobuf::int64 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:h5PlayCmd.nTime)
}

// -------------------------------------------------------------------

// h5Src

// .h5SourceType nType = 1;
inline void h5Src::clear_ntype() {
  ntype_ = 0;
}
inline ::h5SourceType h5Src::ntype() const {
  // @@protoc_insertion_point(field_get:h5Src.nType)
  return static_cast< ::h5SourceType >(ntype_);
}
inline void h5Src::set_ntype(::h5SourceType value) {
  
  ntype_ = value;
  // @@protoc_insertion_point(field_set:h5Src.nType)
}

// string strName = 2;
inline void h5Src::clear_strname() {
  strname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strname() const {
  // @@protoc_insertion_point(field_get:h5Src.strName)
  return strname_.GetNoArena();
}
inline void h5Src::set_strname(const ::std::string& value) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strName)
}
#if LANG_CXX11
inline void h5Src::set_strname(::std::string&& value) {
  
  strname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strName)
}
#endif
inline void h5Src::set_strname(const char* value) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strName)
}
inline void h5Src::set_strname(const char* value, size_t size) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strName)
}
inline ::std::string* h5Src::mutable_strname() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strName)
  return strname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strname() {
  // @@protoc_insertion_point(field_release:h5Src.strName)
  
  return strname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strname(::std::string* strname) {
  if (strname != NULL) {
    
  } else {
    
  }
  strname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strname);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strName)
}

// string strToken = 3;
inline void h5Src::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strtoken() const {
  // @@protoc_insertion_point(field_get:h5Src.strToken)
  return strtoken_.GetNoArena();
}
inline void h5Src::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strToken)
}
#if LANG_CXX11
inline void h5Src::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strToken)
}
#endif
inline void h5Src::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strToken)
}
inline void h5Src::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strToken)
}
inline ::std::string* h5Src::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strtoken() {
  // @@protoc_insertion_point(field_release:h5Src.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strToken)
}

// string strUrl = 4;
inline void h5Src::clear_strurl() {
  strurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strurl() const {
  // @@protoc_insertion_point(field_get:h5Src.strUrl)
  return strurl_.GetNoArena();
}
inline void h5Src::set_strurl(const ::std::string& value) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strUrl)
}
#if LANG_CXX11
inline void h5Src::set_strurl(::std::string&& value) {
  
  strurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strUrl)
}
#endif
inline void h5Src::set_strurl(const char* value) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strUrl)
}
inline void h5Src::set_strurl(const char* value, size_t size) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strUrl)
}
inline ::std::string* h5Src::mutable_strurl() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strUrl)
  return strurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strurl() {
  // @@protoc_insertion_point(field_release:h5Src.strUrl)
  
  return strurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strurl(::std::string* strurl) {
  if (strurl != NULL) {
    
  } else {
    
  }
  strurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strurl);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strUrl)
}

// string strUser = 5;
inline void h5Src::clear_struser() {
  struser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::struser() const {
  // @@protoc_insertion_point(field_get:h5Src.strUser)
  return struser_.GetNoArena();
}
inline void h5Src::set_struser(const ::std::string& value) {
  
  struser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strUser)
}
#if LANG_CXX11
inline void h5Src::set_struser(::std::string&& value) {
  
  struser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strUser)
}
#endif
inline void h5Src::set_struser(const char* value) {
  
  struser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strUser)
}
inline void h5Src::set_struser(const char* value, size_t size) {
  
  struser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strUser)
}
inline ::std::string* h5Src::mutable_struser() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strUser)
  return struser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_struser() {
  // @@protoc_insertion_point(field_release:h5Src.strUser)
  
  return struser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_struser(::std::string* struser) {
  if (struser != NULL) {
    
  } else {
    
  }
  struser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), struser);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strUser)
}

// string strPasswd = 6;
inline void h5Src::clear_strpasswd() {
  strpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strpasswd() const {
  // @@protoc_insertion_point(field_get:h5Src.strPasswd)
  return strpasswd_.GetNoArena();
}
inline void h5Src::set_strpasswd(const ::std::string& value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strPasswd)
}
#if LANG_CXX11
inline void h5Src::set_strpasswd(::std::string&& value) {
  
  strpasswd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strPasswd)
}
#endif
inline void h5Src::set_strpasswd(const char* value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strPasswd)
}
inline void h5Src::set_strpasswd(const char* value, size_t size) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strPasswd)
}
inline ::std::string* h5Src::mutable_strpasswd() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strPasswd)
  return strpasswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strpasswd() {
  // @@protoc_insertion_point(field_release:h5Src.strPasswd)
  
  return strpasswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strpasswd(::std::string* strpasswd) {
  if (strpasswd != NULL) {
    
  } else {
    
  }
  strpasswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpasswd);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strPasswd)
}

// bool bPasswdEncrypt = 7;
inline void h5Src::clear_bpasswdencrypt() {
  bpasswdencrypt_ = false;
}
inline bool h5Src::bpasswdencrypt() const {
  // @@protoc_insertion_point(field_get:h5Src.bPasswdEncrypt)
  return bpasswdencrypt_;
}
inline void h5Src::set_bpasswdencrypt(bool value) {
  
  bpasswdencrypt_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bPasswdEncrypt)
}

// bool bEnableAudio = 100;
inline void h5Src::clear_benableaudio() {
  benableaudio_ = false;
}
inline bool h5Src::benableaudio() const {
  // @@protoc_insertion_point(field_get:h5Src.bEnableAudio)
  return benableaudio_;
}
inline void h5Src::set_benableaudio(bool value) {
  
  benableaudio_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bEnableAudio)
}

// .h5SourceConnectType nConnectType = 101;
inline void h5Src::clear_nconnecttype() {
  nconnecttype_ = 0;
}
inline ::h5SourceConnectType h5Src::nconnecttype() const {
  // @@protoc_insertion_point(field_get:h5Src.nConnectType)
  return static_cast< ::h5SourceConnectType >(nconnecttype_);
}
inline void h5Src::set_nconnecttype(::h5SourceConnectType value) {
  
  nconnecttype_ = value;
  // @@protoc_insertion_point(field_set:h5Src.nConnectType)
}

// .h5RTSPConnectType nRTSPType = 102;
inline void h5Src::clear_nrtsptype() {
  nrtsptype_ = 0;
}
inline ::h5RTSPConnectType h5Src::nrtsptype() const {
  // @@protoc_insertion_point(field_get:h5Src.nRTSPType)
  return static_cast< ::h5RTSPConnectType >(nrtsptype_);
}
inline void h5Src::set_nrtsptype(::h5RTSPConnectType value) {
  
  nrtsptype_ = value;
  // @@protoc_insertion_point(field_set:h5Src.nRTSPType)
}

// string strSrcIpAddress = 103;
inline void h5Src::clear_strsrcipaddress() {
  strsrcipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strsrcipaddress() const {
  // @@protoc_insertion_point(field_get:h5Src.strSrcIpAddress)
  return strsrcipaddress_.GetNoArena();
}
inline void h5Src::set_strsrcipaddress(const ::std::string& value) {
  
  strsrcipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strSrcIpAddress)
}
#if LANG_CXX11
inline void h5Src::set_strsrcipaddress(::std::string&& value) {
  
  strsrcipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strSrcIpAddress)
}
#endif
inline void h5Src::set_strsrcipaddress(const char* value) {
  
  strsrcipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strSrcIpAddress)
}
inline void h5Src::set_strsrcipaddress(const char* value, size_t size) {
  
  strsrcipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strSrcIpAddress)
}
inline ::std::string* h5Src::mutable_strsrcipaddress() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strSrcIpAddress)
  return strsrcipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strsrcipaddress() {
  // @@protoc_insertion_point(field_release:h5Src.strSrcIpAddress)
  
  return strsrcipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strsrcipaddress(::std::string* strsrcipaddress) {
  if (strsrcipaddress != NULL) {
    
  } else {
    
  }
  strsrcipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsrcipaddress);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strSrcIpAddress)
}

// string strSrcPort = 104;
inline void h5Src::clear_strsrcport() {
  strsrcport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strsrcport() const {
  // @@protoc_insertion_point(field_get:h5Src.strSrcPort)
  return strsrcport_.GetNoArena();
}
inline void h5Src::set_strsrcport(const ::std::string& value) {
  
  strsrcport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strSrcPort)
}
#if LANG_CXX11
inline void h5Src::set_strsrcport(::std::string&& value) {
  
  strsrcport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strSrcPort)
}
#endif
inline void h5Src::set_strsrcport(const char* value) {
  
  strsrcport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strSrcPort)
}
inline void h5Src::set_strsrcport(const char* value, size_t size) {
  
  strsrcport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strSrcPort)
}
inline ::std::string* h5Src::mutable_strsrcport() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strSrcPort)
  return strsrcport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strsrcport() {
  // @@protoc_insertion_point(field_release:h5Src.strSrcPort)
  
  return strsrcport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strsrcport(::std::string* strsrcport) {
  if (strsrcport != NULL) {
    
  } else {
    
  }
  strsrcport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsrcport);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strSrcPort)
}

// int32 nChannelNumber = 105;
inline void h5Src::clear_nchannelnumber() {
  nchannelnumber_ = 0;
}
inline ::google::protobuf::int32 h5Src::nchannelnumber() const {
  // @@protoc_insertion_point(field_get:h5Src.nChannelNumber)
  return nchannelnumber_;
}
inline void h5Src::set_nchannelnumber(::google::protobuf::int32 value) {
  
  nchannelnumber_ = value;
  // @@protoc_insertion_point(field_set:h5Src.nChannelNumber)
}

// bool bOnvifProfileAuto = 200;
inline void h5Src::clear_bonvifprofileauto() {
  bonvifprofileauto_ = false;
}
inline bool h5Src::bonvifprofileauto() const {
  // @@protoc_insertion_point(field_get:h5Src.bOnvifProfileAuto)
  return bonvifprofileauto_;
}
inline void h5Src::set_bonvifprofileauto(bool value) {
  
  bonvifprofileauto_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bOnvifProfileAuto)
}

// string strOnvifAddr = 201;
inline void h5Src::clear_stronvifaddr() {
  stronvifaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::stronvifaddr() const {
  // @@protoc_insertion_point(field_get:h5Src.strOnvifAddr)
  return stronvifaddr_.GetNoArena();
}
inline void h5Src::set_stronvifaddr(const ::std::string& value) {
  
  stronvifaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strOnvifAddr)
}
#if LANG_CXX11
inline void h5Src::set_stronvifaddr(::std::string&& value) {
  
  stronvifaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strOnvifAddr)
}
#endif
inline void h5Src::set_stronvifaddr(const char* value) {
  
  stronvifaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strOnvifAddr)
}
inline void h5Src::set_stronvifaddr(const char* value, size_t size) {
  
  stronvifaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strOnvifAddr)
}
inline ::std::string* h5Src::mutable_stronvifaddr() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strOnvifAddr)
  return stronvifaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_stronvifaddr() {
  // @@protoc_insertion_point(field_release:h5Src.strOnvifAddr)
  
  return stronvifaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_stronvifaddr(::std::string* stronvifaddr) {
  if (stronvifaddr != NULL) {
    
  } else {
    
  }
  stronvifaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stronvifaddr);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strOnvifAddr)
}

// string strOnvifProfileMain = 202;
inline void h5Src::clear_stronvifprofilemain() {
  stronvifprofilemain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::stronvifprofilemain() const {
  // @@protoc_insertion_point(field_get:h5Src.strOnvifProfileMain)
  return stronvifprofilemain_.GetNoArena();
}
inline void h5Src::set_stronvifprofilemain(const ::std::string& value) {
  
  stronvifprofilemain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strOnvifProfileMain)
}
#if LANG_CXX11
inline void h5Src::set_stronvifprofilemain(::std::string&& value) {
  
  stronvifprofilemain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strOnvifProfileMain)
}
#endif
inline void h5Src::set_stronvifprofilemain(const char* value) {
  
  stronvifprofilemain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strOnvifProfileMain)
}
inline void h5Src::set_stronvifprofilemain(const char* value, size_t size) {
  
  stronvifprofilemain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strOnvifProfileMain)
}
inline ::std::string* h5Src::mutable_stronvifprofilemain() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strOnvifProfileMain)
  return stronvifprofilemain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_stronvifprofilemain() {
  // @@protoc_insertion_point(field_release:h5Src.strOnvifProfileMain)
  
  return stronvifprofilemain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_stronvifprofilemain(::std::string* stronvifprofilemain) {
  if (stronvifprofilemain != NULL) {
    
  } else {
    
  }
  stronvifprofilemain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stronvifprofilemain);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strOnvifProfileMain)
}

// string strOnvifProfileSub = 203;
inline void h5Src::clear_stronvifprofilesub() {
  stronvifprofilesub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::stronvifprofilesub() const {
  // @@protoc_insertion_point(field_get:h5Src.strOnvifProfileSub)
  return stronvifprofilesub_.GetNoArena();
}
inline void h5Src::set_stronvifprofilesub(const ::std::string& value) {
  
  stronvifprofilesub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strOnvifProfileSub)
}
#if LANG_CXX11
inline void h5Src::set_stronvifprofilesub(::std::string&& value) {
  
  stronvifprofilesub_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strOnvifProfileSub)
}
#endif
inline void h5Src::set_stronvifprofilesub(const char* value) {
  
  stronvifprofilesub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strOnvifProfileSub)
}
inline void h5Src::set_stronvifprofilesub(const char* value, size_t size) {
  
  stronvifprofilesub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strOnvifProfileSub)
}
inline ::std::string* h5Src::mutable_stronvifprofilesub() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strOnvifProfileSub)
  return stronvifprofilesub_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_stronvifprofilesub() {
  // @@protoc_insertion_point(field_release:h5Src.strOnvifProfileSub)
  
  return stronvifprofilesub_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_stronvifprofilesub(::std::string* stronvifprofilesub) {
  if (stronvifprofilesub != NULL) {
    
  } else {
    
  }
  stronvifprofilesub_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stronvifprofilesub);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strOnvifProfileSub)
}

// bool bRTSPPlayback = 204;
inline void h5Src::clear_brtspplayback() {
  brtspplayback_ = false;
}
inline bool h5Src::brtspplayback() const {
  // @@protoc_insertion_point(field_get:h5Src.bRTSPPlayback)
  return brtspplayback_;
}
inline void h5Src::set_brtspplayback(bool value) {
  
  brtspplayback_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bRTSPPlayback)
}

// float nRTSPPlaybackSpeed = 205;
inline void h5Src::clear_nrtspplaybackspeed() {
  nrtspplaybackspeed_ = 0;
}
inline float h5Src::nrtspplaybackspeed() const {
  // @@protoc_insertion_point(field_get:h5Src.nRTSPPlaybackSpeed)
  return nrtspplaybackspeed_;
}
inline void h5Src::set_nrtspplaybackspeed(float value) {
  
  nrtspplaybackspeed_ = value;
  // @@protoc_insertion_point(field_set:h5Src.nRTSPPlaybackSpeed)
}

// bool bOnline = 500;
inline void h5Src::clear_bonline() {
  bonline_ = false;
}
inline bool h5Src::bonline() const {
  // @@protoc_insertion_point(field_get:h5Src.bOnline)
  return bonline_;
}
inline void h5Src::set_bonline(bool value) {
  
  bonline_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bOnline)
}

// string strSnapshotUrl = 501;
inline void h5Src::clear_strsnapshoturl() {
  strsnapshoturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strsnapshoturl() const {
  // @@protoc_insertion_point(field_get:h5Src.strSnapshotUrl)
  return strsnapshoturl_.GetNoArena();
}
inline void h5Src::set_strsnapshoturl(const ::std::string& value) {
  
  strsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strSnapshotUrl)
}
#if LANG_CXX11
inline void h5Src::set_strsnapshoturl(::std::string&& value) {
  
  strsnapshoturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strSnapshotUrl)
}
#endif
inline void h5Src::set_strsnapshoturl(const char* value) {
  
  strsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strSnapshotUrl)
}
inline void h5Src::set_strsnapshoturl(const char* value, size_t size) {
  
  strsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strSnapshotUrl)
}
inline ::std::string* h5Src::mutable_strsnapshoturl() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strSnapshotUrl)
  return strsnapshoturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strsnapshoturl() {
  // @@protoc_insertion_point(field_release:h5Src.strSnapshotUrl)
  
  return strsnapshoturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strsnapshoturl(::std::string* strsnapshoturl) {
  if (strsnapshoturl != NULL) {
    
  } else {
    
  }
  strsnapshoturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsnapshoturl);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strSnapshotUrl)
}

// bool bRec = 502;
inline void h5Src::clear_brec() {
  brec_ = false;
}
inline bool h5Src::brec() const {
  // @@protoc_insertion_point(field_get:h5Src.bRec)
  return brec_;
}
inline void h5Src::set_brec(bool value) {
  
  brec_ = value;
  // @@protoc_insertion_point(field_set:h5Src.bRec)
}

// string strServerToken = 601;
inline void h5Src::clear_strservertoken() {
  strservertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strservertoken() const {
  // @@protoc_insertion_point(field_get:h5Src.strServerToken)
  return strservertoken_.GetNoArena();
}
inline void h5Src::set_strservertoken(const ::std::string& value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strServerToken)
}
#if LANG_CXX11
inline void h5Src::set_strservertoken(::std::string&& value) {
  
  strservertoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strServerToken)
}
#endif
inline void h5Src::set_strservertoken(const char* value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strServerToken)
}
inline void h5Src::set_strservertoken(const char* value, size_t size) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strServerToken)
}
inline ::std::string* h5Src::mutable_strservertoken() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strServerToken)
  return strservertoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strservertoken() {
  // @@protoc_insertion_point(field_release:h5Src.strServerToken)
  
  return strservertoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strservertoken(::std::string* strservertoken) {
  if (strservertoken != NULL) {
    
  } else {
    
  }
  strservertoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strservertoken);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strServerToken)
}

// string strOriginalToken = 602;
inline void h5Src::clear_stroriginaltoken() {
  stroriginaltoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::stroriginaltoken() const {
  // @@protoc_insertion_point(field_get:h5Src.strOriginalToken)
  return stroriginaltoken_.GetNoArena();
}
inline void h5Src::set_stroriginaltoken(const ::std::string& value) {
  
  stroriginaltoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strOriginalToken)
}
#if LANG_CXX11
inline void h5Src::set_stroriginaltoken(::std::string&& value) {
  
  stroriginaltoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strOriginalToken)
}
#endif
inline void h5Src::set_stroriginaltoken(const char* value) {
  
  stroriginaltoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strOriginalToken)
}
inline void h5Src::set_stroriginaltoken(const char* value, size_t size) {
  
  stroriginaltoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strOriginalToken)
}
inline ::std::string* h5Src::mutable_stroriginaltoken() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strOriginalToken)
  return stroriginaltoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_stroriginaltoken() {
  // @@protoc_insertion_point(field_release:h5Src.strOriginalToken)
  
  return stroriginaltoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_stroriginaltoken(::std::string* stroriginaltoken) {
  if (stroriginaltoken != NULL) {
    
  } else {
    
  }
  stroriginaltoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stroriginaltoken);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strOriginalToken)
}

// string strServerUuid = 603;
inline void h5Src::clear_strserveruuid() {
  strserveruuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Src::strserveruuid() const {
  // @@protoc_insertion_point(field_get:h5Src.strServerUuid)
  return strserveruuid_.GetNoArena();
}
inline void h5Src::set_strserveruuid(const ::std::string& value) {
  
  strserveruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Src.strServerUuid)
}
#if LANG_CXX11
inline void h5Src::set_strserveruuid(::std::string&& value) {
  
  strserveruuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Src.strServerUuid)
}
#endif
inline void h5Src::set_strserveruuid(const char* value) {
  
  strserveruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Src.strServerUuid)
}
inline void h5Src::set_strserveruuid(const char* value, size_t size) {
  
  strserveruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Src.strServerUuid)
}
inline ::std::string* h5Src::mutable_strserveruuid() {
  
  // @@protoc_insertion_point(field_mutable:h5Src.strServerUuid)
  return strserveruuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Src::release_strserveruuid() {
  // @@protoc_insertion_point(field_release:h5Src.strServerUuid)
  
  return strserveruuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Src::set_allocated_strserveruuid(::std::string* strserveruuid) {
  if (strserveruuid != NULL) {
    
  } else {
    
  }
  strserveruuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserveruuid);
  // @@protoc_insertion_point(field_set_allocated:h5Src.strServerUuid)
}

// -------------------------------------------------------------------

// h5SrcList

// repeated .h5Src src = 1;
inline int h5SrcList::src_size() const {
  return src_.size();
}
inline void h5SrcList::clear_src() {
  src_.Clear();
}
inline const ::h5Src& h5SrcList::src(int index) const {
  // @@protoc_insertion_point(field_get:h5SrcList.src)
  return src_.Get(index);
}
inline ::h5Src* h5SrcList::mutable_src(int index) {
  // @@protoc_insertion_point(field_mutable:h5SrcList.src)
  return src_.Mutable(index);
}
inline ::h5Src* h5SrcList::add_src() {
  // @@protoc_insertion_point(field_add:h5SrcList.src)
  return src_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5Src >*
h5SrcList::mutable_src() {
  // @@protoc_insertion_point(field_mutable_list:h5SrcList.src)
  return &src_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5Src >&
h5SrcList::src() const {
  // @@protoc_insertion_point(field_list:h5SrcList.src)
  return src_;
}

// -------------------------------------------------------------------

// h5Record

// string strToken = 1;
inline void h5Record::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Record::strtoken() const {
  // @@protoc_insertion_point(field_get:h5Record.strToken)
  return strtoken_.GetNoArena();
}
inline void h5Record::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Record.strToken)
}
#if LANG_CXX11
inline void h5Record::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Record.strToken)
}
#endif
inline void h5Record::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Record.strToken)
}
inline void h5Record::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Record.strToken)
}
inline ::std::string* h5Record::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:h5Record.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Record::release_strtoken() {
  // @@protoc_insertion_point(field_release:h5Record.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Record::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:h5Record.strToken)
}

// string strStartTime = 2;
inline void h5Record::clear_strstarttime() {
  strstarttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Record::strstarttime() const {
  // @@protoc_insertion_point(field_get:h5Record.strStartTime)
  return strstarttime_.GetNoArena();
}
inline void h5Record::set_strstarttime(const ::std::string& value) {
  
  strstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Record.strStartTime)
}
#if LANG_CXX11
inline void h5Record::set_strstarttime(::std::string&& value) {
  
  strstarttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Record.strStartTime)
}
#endif
inline void h5Record::set_strstarttime(const char* value) {
  
  strstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Record.strStartTime)
}
inline void h5Record::set_strstarttime(const char* value, size_t size) {
  
  strstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Record.strStartTime)
}
inline ::std::string* h5Record::mutable_strstarttime() {
  
  // @@protoc_insertion_point(field_mutable:h5Record.strStartTime)
  return strstarttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Record::release_strstarttime() {
  // @@protoc_insertion_point(field_release:h5Record.strStartTime)
  
  return strstarttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Record::set_allocated_strstarttime(::std::string* strstarttime) {
  if (strstarttime != NULL) {
    
  } else {
    
  }
  strstarttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstarttime);
  // @@protoc_insertion_point(field_set_allocated:h5Record.strStartTime)
}

// string strDuration = 3;
inline void h5Record::clear_strduration() {
  strduration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Record::strduration() const {
  // @@protoc_insertion_point(field_get:h5Record.strDuration)
  return strduration_.GetNoArena();
}
inline void h5Record::set_strduration(const ::std::string& value) {
  
  strduration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Record.strDuration)
}
#if LANG_CXX11
inline void h5Record::set_strduration(::std::string&& value) {
  
  strduration_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Record.strDuration)
}
#endif
inline void h5Record::set_strduration(const char* value) {
  
  strduration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Record.strDuration)
}
inline void h5Record::set_strduration(const char* value, size_t size) {
  
  strduration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Record.strDuration)
}
inline ::std::string* h5Record::mutable_strduration() {
  
  // @@protoc_insertion_point(field_mutable:h5Record.strDuration)
  return strduration_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Record::release_strduration() {
  // @@protoc_insertion_point(field_release:h5Record.strDuration)
  
  return strduration_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Record::set_allocated_strduration(::std::string* strduration) {
  if (strduration != NULL) {
    
  } else {
    
  }
  strduration_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strduration);
  // @@protoc_insertion_point(field_set_allocated:h5Record.strDuration)
}

// string strPath = 4;
inline void h5Record::clear_strpath() {
  strpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Record::strpath() const {
  // @@protoc_insertion_point(field_get:h5Record.strPath)
  return strpath_.GetNoArena();
}
inline void h5Record::set_strpath(const ::std::string& value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Record.strPath)
}
#if LANG_CXX11
inline void h5Record::set_strpath(::std::string&& value) {
  
  strpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Record.strPath)
}
#endif
inline void h5Record::set_strpath(const char* value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Record.strPath)
}
inline void h5Record::set_strpath(const char* value, size_t size) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Record.strPath)
}
inline ::std::string* h5Record::mutable_strpath() {
  
  // @@protoc_insertion_point(field_mutable:h5Record.strPath)
  return strpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Record::release_strpath() {
  // @@protoc_insertion_point(field_release:h5Record.strPath)
  
  return strpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Record::set_allocated_strpath(::std::string* strpath) {
  if (strpath != NULL) {
    
  } else {
    
  }
  strpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpath);
  // @@protoc_insertion_point(field_set_allocated:h5Record.strPath)
}

// -------------------------------------------------------------------

// h5RecordList

// repeated .h5Record record = 1;
inline int h5RecordList::record_size() const {
  return record_.size();
}
inline void h5RecordList::clear_record() {
  record_.Clear();
}
inline const ::h5Record& h5RecordList::record(int index) const {
  // @@protoc_insertion_point(field_get:h5RecordList.record)
  return record_.Get(index);
}
inline ::h5Record* h5RecordList::mutable_record(int index) {
  // @@protoc_insertion_point(field_mutable:h5RecordList.record)
  return record_.Mutable(index);
}
inline ::h5Record* h5RecordList::add_record() {
  // @@protoc_insertion_point(field_add:h5RecordList.record)
  return record_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5Record >*
h5RecordList::mutable_record() {
  // @@protoc_insertion_point(field_mutable_list:h5RecordList.record)
  return &record_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5Record >&
h5RecordList::record() const {
  // @@protoc_insertion_point(field_list:h5RecordList.record)
  return record_;
}

// -------------------------------------------------------------------

// h5Server

// string strServerName = 1;
inline void h5Server::clear_strservername() {
  strservername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Server::strservername() const {
  // @@protoc_insertion_point(field_get:h5Server.strServerName)
  return strservername_.GetNoArena();
}
inline void h5Server::set_strservername(const ::std::string& value) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Server.strServerName)
}
#if LANG_CXX11
inline void h5Server::set_strservername(::std::string&& value) {
  
  strservername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Server.strServerName)
}
#endif
inline void h5Server::set_strservername(const char* value) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Server.strServerName)
}
inline void h5Server::set_strservername(const char* value, size_t size) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Server.strServerName)
}
inline ::std::string* h5Server::mutable_strservername() {
  
  // @@protoc_insertion_point(field_mutable:h5Server.strServerName)
  return strservername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Server::release_strservername() {
  // @@protoc_insertion_point(field_release:h5Server.strServerName)
  
  return strservername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Server::set_allocated_strservername(::std::string* strservername) {
  if (strservername != NULL) {
    
  } else {
    
  }
  strservername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strservername);
  // @@protoc_insertion_point(field_set_allocated:h5Server.strServerName)
}

// string strServerToken = 2;
inline void h5Server::clear_strservertoken() {
  strservertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Server::strservertoken() const {
  // @@protoc_insertion_point(field_get:h5Server.strServerToken)
  return strservertoken_.GetNoArena();
}
inline void h5Server::set_strservertoken(const ::std::string& value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Server.strServerToken)
}
#if LANG_CXX11
inline void h5Server::set_strservertoken(::std::string&& value) {
  
  strservertoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Server.strServerToken)
}
#endif
inline void h5Server::set_strservertoken(const char* value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Server.strServerToken)
}
inline void h5Server::set_strservertoken(const char* value, size_t size) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Server.strServerToken)
}
inline ::std::string* h5Server::mutable_strservertoken() {
  
  // @@protoc_insertion_point(field_mutable:h5Server.strServerToken)
  return strservertoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Server::release_strservertoken() {
  // @@protoc_insertion_point(field_release:h5Server.strServerToken)
  
  return strservertoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Server::set_allocated_strservertoken(::std::string* strservertoken) {
  if (strservertoken != NULL) {
    
  } else {
    
  }
  strservertoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strservertoken);
  // @@protoc_insertion_point(field_set_allocated:h5Server.strServerToken)
}

// string strServerIp = 3;
inline void h5Server::clear_strserverip() {
  strserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5Server::strserverip() const {
  // @@protoc_insertion_point(field_get:h5Server.strServerIp)
  return strserverip_.GetNoArena();
}
inline void h5Server::set_strserverip(const ::std::string& value) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5Server.strServerIp)
}
#if LANG_CXX11
inline void h5Server::set_strserverip(::std::string&& value) {
  
  strserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5Server.strServerIp)
}
#endif
inline void h5Server::set_strserverip(const char* value) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5Server.strServerIp)
}
inline void h5Server::set_strserverip(const char* value, size_t size) {
  
  strserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5Server.strServerIp)
}
inline ::std::string* h5Server::mutable_strserverip() {
  
  // @@protoc_insertion_point(field_mutable:h5Server.strServerIp)
  return strserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5Server::release_strserverip() {
  // @@protoc_insertion_point(field_release:h5Server.strServerIp)
  
  return strserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5Server::set_allocated_strserverip(::std::string* strserverip) {
  if (strserverip != NULL) {
    
  } else {
    
  }
  strserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strserverip);
  // @@protoc_insertion_point(field_set_allocated:h5Server.strServerIp)
}

// bool bOnline = 4;
inline void h5Server::clear_bonline() {
  bonline_ = false;
}
inline bool h5Server::bonline() const {
  // @@protoc_insertion_point(field_get:h5Server.bOnline)
  return bonline_;
}
inline void h5Server::set_bonline(bool value) {
  
  bonline_ = value;
  // @@protoc_insertion_point(field_set:h5Server.bOnline)
}

// -------------------------------------------------------------------

// h5ServerList

// repeated .h5Server server = 1;
inline int h5ServerList::server_size() const {
  return server_.size();
}
inline void h5ServerList::clear_server() {
  server_.Clear();
}
inline const ::h5Server& h5ServerList::server(int index) const {
  // @@protoc_insertion_point(field_get:h5ServerList.server)
  return server_.Get(index);
}
inline ::h5Server* h5ServerList::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:h5ServerList.server)
  return server_.Mutable(index);
}
inline ::h5Server* h5ServerList::add_server() {
  // @@protoc_insertion_point(field_add:h5ServerList.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5Server >*
h5ServerList::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:h5ServerList.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5Server >&
h5ServerList::server() const {
  // @@protoc_insertion_point(field_list:h5ServerList.server)
  return server_;
}

// -------------------------------------------------------------------

// h5PtzPreset

// string strName = 1;
inline void h5PtzPreset::clear_strname() {
  strname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5PtzPreset::strname() const {
  // @@protoc_insertion_point(field_get:h5PtzPreset.strName)
  return strname_.GetNoArena();
}
inline void h5PtzPreset::set_strname(const ::std::string& value) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5PtzPreset.strName)
}
#if LANG_CXX11
inline void h5PtzPreset::set_strname(::std::string&& value) {
  
  strname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5PtzPreset.strName)
}
#endif
inline void h5PtzPreset::set_strname(const char* value) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5PtzPreset.strName)
}
inline void h5PtzPreset::set_strname(const char* value, size_t size) {
  
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5PtzPreset.strName)
}
inline ::std::string* h5PtzPreset::mutable_strname() {
  
  // @@protoc_insertion_point(field_mutable:h5PtzPreset.strName)
  return strname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5PtzPreset::release_strname() {
  // @@protoc_insertion_point(field_release:h5PtzPreset.strName)
  
  return strname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5PtzPreset::set_allocated_strname(::std::string* strname) {
  if (strname != NULL) {
    
  } else {
    
  }
  strname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strname);
  // @@protoc_insertion_point(field_set_allocated:h5PtzPreset.strName)
}

// string strToken = 2;
inline void h5PtzPreset::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5PtzPreset::strtoken() const {
  // @@protoc_insertion_point(field_get:h5PtzPreset.strToken)
  return strtoken_.GetNoArena();
}
inline void h5PtzPreset::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5PtzPreset.strToken)
}
#if LANG_CXX11
inline void h5PtzPreset::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5PtzPreset.strToken)
}
#endif
inline void h5PtzPreset::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5PtzPreset.strToken)
}
inline void h5PtzPreset::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5PtzPreset.strToken)
}
inline ::std::string* h5PtzPreset::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:h5PtzPreset.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5PtzPreset::release_strtoken() {
  // @@protoc_insertion_point(field_release:h5PtzPreset.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5PtzPreset::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:h5PtzPreset.strToken)
}

// -------------------------------------------------------------------

// h5PtzPresetList

// repeated .h5PtzPreset preset = 1;
inline int h5PtzPresetList::preset_size() const {
  return preset_.size();
}
inline void h5PtzPresetList::clear_preset() {
  preset_.Clear();
}
inline const ::h5PtzPreset& h5PtzPresetList::preset(int index) const {
  // @@protoc_insertion_point(field_get:h5PtzPresetList.preset)
  return preset_.Get(index);
}
inline ::h5PtzPreset* h5PtzPresetList::mutable_preset(int index) {
  // @@protoc_insertion_point(field_mutable:h5PtzPresetList.preset)
  return preset_.Mutable(index);
}
inline ::h5PtzPreset* h5PtzPresetList::add_preset() {
  // @@protoc_insertion_point(field_add:h5PtzPresetList.preset)
  return preset_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5PtzPreset >*
h5PtzPresetList::mutable_preset() {
  // @@protoc_insertion_point(field_mutable_list:h5PtzPresetList.preset)
  return &preset_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5PtzPreset >&
h5PtzPresetList::preset() const {
  // @@protoc_insertion_point(field_list:h5PtzPresetList.preset)
  return preset_;
}

// -------------------------------------------------------------------

// h5ClusterStatus

// bool bEnable = 1;
inline void h5ClusterStatus::clear_benable() {
  benable_ = false;
}
inline bool h5ClusterStatus::benable() const {
  // @@protoc_insertion_point(field_get:h5ClusterStatus.bEnable)
  return benable_;
}
inline void h5ClusterStatus::set_benable(bool value) {
  
  benable_ = value;
  // @@protoc_insertion_point(field_set:h5ClusterStatus.bEnable)
}

// -------------------------------------------------------------------

// h5sClusterLoad

// int32 nCPU = 1;
inline void h5sClusterLoad::clear_ncpu() {
  ncpu_ = 0;
}
inline ::google::protobuf::int32 h5sClusterLoad::ncpu() const {
  // @@protoc_insertion_point(field_get:h5sClusterLoad.nCPU)
  return ncpu_;
}
inline void h5sClusterLoad::set_ncpu(::google::protobuf::int32 value) {
  
  ncpu_ = value;
  // @@protoc_insertion_point(field_set:h5sClusterLoad.nCPU)
}

// int32 nMem = 2;
inline void h5sClusterLoad::clear_nmem() {
  nmem_ = 0;
}
inline ::google::protobuf::int32 h5sClusterLoad::nmem() const {
  // @@protoc_insertion_point(field_get:h5sClusterLoad.nMem)
  return nmem_;
}
inline void h5sClusterLoad::set_nmem(::google::protobuf::int32 value) {
  
  nmem_ = value;
  // @@protoc_insertion_point(field_set:h5sClusterLoad.nMem)
}

// int64 nNetInK = 3;
inline void h5sClusterLoad::clear_nnetink() {
  nnetink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 h5sClusterLoad::nnetink() const {
  // @@protoc_insertion_point(field_get:h5sClusterLoad.nNetInK)
  return nnetink_;
}
inline void h5sClusterLoad::set_nnetink(::google::protobuf::int64 value) {
  
  nnetink_ = value;
  // @@protoc_insertion_point(field_set:h5sClusterLoad.nNetInK)
}

// int64 nNetOutK = 4;
inline void h5sClusterLoad::clear_nnetoutk() {
  nnetoutk_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 h5sClusterLoad::nnetoutk() const {
  // @@protoc_insertion_point(field_get:h5sClusterLoad.nNetOutK)
  return nnetoutk_;
}
inline void h5sClusterLoad::set_nnetoutk(::google::protobuf::int64 value) {
  
  nnetoutk_ = value;
  // @@protoc_insertion_point(field_set:h5sClusterLoad.nNetOutK)
}

// int32 nIotDeviceCount = 5;
inline void h5sClusterLoad::clear_niotdevicecount() {
  niotdevicecount_ = 0;
}
inline ::google::protobuf::int32 h5sClusterLoad::niotdevicecount() const {
  // @@protoc_insertion_point(field_get:h5sClusterLoad.nIotDeviceCount)
  return niotdevicecount_;
}
inline void h5sClusterLoad::set_niotdevicecount(::google::protobuf::int32 value) {
  
  niotdevicecount_ = value;
  // @@protoc_insertion_point(field_set:h5sClusterLoad.nIotDeviceCount)
}

// -------------------------------------------------------------------

// h5sNodeServiceAddr

// string strNodeId = 1;
inline void h5sNodeServiceAddr::clear_strnodeid() {
  strnodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5sNodeServiceAddr::strnodeid() const {
  // @@protoc_insertion_point(field_get:h5sNodeServiceAddr.strNodeId)
  return strnodeid_.GetNoArena();
}
inline void h5sNodeServiceAddr::set_strnodeid(const ::std::string& value) {
  
  strnodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5sNodeServiceAddr.strNodeId)
}
#if LANG_CXX11
inline void h5sNodeServiceAddr::set_strnodeid(::std::string&& value) {
  
  strnodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5sNodeServiceAddr.strNodeId)
}
#endif
inline void h5sNodeServiceAddr::set_strnodeid(const char* value) {
  
  strnodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5sNodeServiceAddr.strNodeId)
}
inline void h5sNodeServiceAddr::set_strnodeid(const char* value, size_t size) {
  
  strnodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5sNodeServiceAddr.strNodeId)
}
inline ::std::string* h5sNodeServiceAddr::mutable_strnodeid() {
  
  // @@protoc_insertion_point(field_mutable:h5sNodeServiceAddr.strNodeId)
  return strnodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5sNodeServiceAddr::release_strnodeid() {
  // @@protoc_insertion_point(field_release:h5sNodeServiceAddr.strNodeId)
  
  return strnodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5sNodeServiceAddr::set_allocated_strnodeid(::std::string* strnodeid) {
  if (strnodeid != NULL) {
    
  } else {
    
  }
  strnodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strnodeid);
  // @@protoc_insertion_point(field_set_allocated:h5sNodeServiceAddr.strNodeId)
}

// string strAddr = 2;
inline void h5sNodeServiceAddr::clear_straddr() {
  straddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5sNodeServiceAddr::straddr() const {
  // @@protoc_insertion_point(field_get:h5sNodeServiceAddr.strAddr)
  return straddr_.GetNoArena();
}
inline void h5sNodeServiceAddr::set_straddr(const ::std::string& value) {
  
  straddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5sNodeServiceAddr.strAddr)
}
#if LANG_CXX11
inline void h5sNodeServiceAddr::set_straddr(::std::string&& value) {
  
  straddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5sNodeServiceAddr.strAddr)
}
#endif
inline void h5sNodeServiceAddr::set_straddr(const char* value) {
  
  straddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5sNodeServiceAddr.strAddr)
}
inline void h5sNodeServiceAddr::set_straddr(const char* value, size_t size) {
  
  straddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5sNodeServiceAddr.strAddr)
}
inline ::std::string* h5sNodeServiceAddr::mutable_straddr() {
  
  // @@protoc_insertion_point(field_mutable:h5sNodeServiceAddr.strAddr)
  return straddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5sNodeServiceAddr::release_straddr() {
  // @@protoc_insertion_point(field_release:h5sNodeServiceAddr.strAddr)
  
  return straddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5sNodeServiceAddr::set_allocated_straddr(::std::string* straddr) {
  if (straddr != NULL) {
    
  } else {
    
  }
  straddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straddr);
  // @@protoc_insertion_point(field_set_allocated:h5sNodeServiceAddr.strAddr)
}

// int32 nPort = 3;
inline void h5sNodeServiceAddr::clear_nport() {
  nport_ = 0;
}
inline ::google::protobuf::int32 h5sNodeServiceAddr::nport() const {
  // @@protoc_insertion_point(field_get:h5sNodeServiceAddr.nPort)
  return nport_;
}
inline void h5sNodeServiceAddr::set_nport(::google::protobuf::int32 value) {
  
  nport_ = value;
  // @@protoc_insertion_point(field_set:h5sNodeServiceAddr.nPort)
}

// bool bOnline = 4;
inline void h5sNodeServiceAddr::clear_bonline() {
  bonline_ = false;
}
inline bool h5sNodeServiceAddr::bonline() const {
  // @@protoc_insertion_point(field_get:h5sNodeServiceAddr.bOnline)
  return bonline_;
}
inline void h5sNodeServiceAddr::set_bonline(bool value) {
  
  bonline_ = value;
  // @@protoc_insertion_point(field_set:h5sNodeServiceAddr.bOnline)
}

// -------------------------------------------------------------------

// h5sVolume

// string strDevice = 1;
inline void h5sVolume::clear_strdevice() {
  strdevice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5sVolume::strdevice() const {
  // @@protoc_insertion_point(field_get:h5sVolume.strDevice)
  return strdevice_.GetNoArena();
}
inline void h5sVolume::set_strdevice(const ::std::string& value) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5sVolume.strDevice)
}
#if LANG_CXX11
inline void h5sVolume::set_strdevice(::std::string&& value) {
  
  strdevice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5sVolume.strDevice)
}
#endif
inline void h5sVolume::set_strdevice(const char* value) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5sVolume.strDevice)
}
inline void h5sVolume::set_strdevice(const char* value, size_t size) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5sVolume.strDevice)
}
inline ::std::string* h5sVolume::mutable_strdevice() {
  
  // @@protoc_insertion_point(field_mutable:h5sVolume.strDevice)
  return strdevice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5sVolume::release_strdevice() {
  // @@protoc_insertion_point(field_release:h5sVolume.strDevice)
  
  return strdevice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5sVolume::set_allocated_strdevice(::std::string* strdevice) {
  if (strdevice != NULL) {
    
  } else {
    
  }
  strdevice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevice);
  // @@protoc_insertion_point(field_set_allocated:h5sVolume.strDevice)
}

// string strPath = 2;
inline void h5sVolume::clear_strpath() {
  strpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& h5sVolume::strpath() const {
  // @@protoc_insertion_point(field_get:h5sVolume.strPath)
  return strpath_.GetNoArena();
}
inline void h5sVolume::set_strpath(const ::std::string& value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:h5sVolume.strPath)
}
#if LANG_CXX11
inline void h5sVolume::set_strpath(::std::string&& value) {
  
  strpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:h5sVolume.strPath)
}
#endif
inline void h5sVolume::set_strpath(const char* value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:h5sVolume.strPath)
}
inline void h5sVolume::set_strpath(const char* value, size_t size) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:h5sVolume.strPath)
}
inline ::std::string* h5sVolume::mutable_strpath() {
  
  // @@protoc_insertion_point(field_mutable:h5sVolume.strPath)
  return strpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* h5sVolume::release_strpath() {
  // @@protoc_insertion_point(field_release:h5sVolume.strPath)
  
  return strpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void h5sVolume::set_allocated_strpath(::std::string* strpath) {
  if (strpath != NULL) {
    
  } else {
    
  }
  strpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpath);
  // @@protoc_insertion_point(field_set_allocated:h5sVolume.strPath)
}

// int64 bTotal = 3;
inline void h5sVolume::clear_btotal() {
  btotal_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 h5sVolume::btotal() const {
  // @@protoc_insertion_point(field_get:h5sVolume.bTotal)
  return btotal_;
}
inline void h5sVolume::set_btotal(::google::protobuf::int64 value) {
  
  btotal_ = value;
  // @@protoc_insertion_point(field_set:h5sVolume.bTotal)
}

// int64 bFree = 4;
inline void h5sVolume::clear_bfree() {
  bfree_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 h5sVolume::bfree() const {
  // @@protoc_insertion_point(field_get:h5sVolume.bFree)
  return bfree_;
}
inline void h5sVolume::set_bfree(::google::protobuf::int64 value) {
  
  bfree_ = value;
  // @@protoc_insertion_point(field_set:h5sVolume.bFree)
}

// bool bReadOnly = 5;
inline void h5sVolume::clear_breadonly() {
  breadonly_ = false;
}
inline bool h5sVolume::breadonly() const {
  // @@protoc_insertion_point(field_get:h5sVolume.bReadOnly)
  return breadonly_;
}
inline void h5sVolume::set_breadonly(bool value) {
  
  breadonly_ = value;
  // @@protoc_insertion_point(field_set:h5sVolume.bReadOnly)
}

// -------------------------------------------------------------------

// h5sVolumeList

// repeated .h5sVolume vol = 1;
inline int h5sVolumeList::vol_size() const {
  return vol_.size();
}
inline void h5sVolumeList::clear_vol() {
  vol_.Clear();
}
inline const ::h5sVolume& h5sVolumeList::vol(int index) const {
  // @@protoc_insertion_point(field_get:h5sVolumeList.vol)
  return vol_.Get(index);
}
inline ::h5sVolume* h5sVolumeList::mutable_vol(int index) {
  // @@protoc_insertion_point(field_mutable:h5sVolumeList.vol)
  return vol_.Mutable(index);
}
inline ::h5sVolume* h5sVolumeList::add_vol() {
  // @@protoc_insertion_point(field_add:h5sVolumeList.vol)
  return vol_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5sVolume >*
h5sVolumeList::mutable_vol() {
  // @@protoc_insertion_point(field_mutable_list:h5sVolumeList.vol)
  return &vol_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5sVolume >&
h5sVolumeList::vol() const {
  // @@protoc_insertion_point(field_list:h5sVolumeList.vol)
  return vol_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::h5StreamType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5StreamType>() {
  return ::h5StreamType_descriptor();
}
template <> struct is_proto_enum< ::h5SourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5SourceType>() {
  return ::h5SourceType_descriptor();
}
template <> struct is_proto_enum< ::h5PtzCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5PtzCmd>() {
  return ::h5PtzCmd_descriptor();
}
template <> struct is_proto_enum< ::h5SourceConnectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5SourceConnectType>() {
  return ::h5SourceConnectType_descriptor();
}
template <> struct is_proto_enum< ::h5HLSSinkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5HLSSinkType>() {
  return ::h5HLSSinkType_descriptor();
}
template <> struct is_proto_enum< ::h5LogType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5LogType>() {
  return ::h5LogType_descriptor();
}
template <> struct is_proto_enum< ::h5RTSPConnectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5RTSPConnectType>() {
  return ::h5RTSPConnectType_descriptor();
}
template <> struct is_proto_enum< ::h5PlayCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::h5PlayCmdType>() {
  return ::h5PlayCmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_h5scommon_2eproto__INCLUDED
