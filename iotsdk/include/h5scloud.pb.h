// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: h5scloud.proto

#ifndef PROTOBUF_h5scloud_2eproto__INCLUDED
#define PROTOBUF_h5scloud_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "h5scommon.pb.h"
// @@protoc_insertion_point(includes)
class CloudCmd;
class CloudCmdDefaultTypeInternal;
IOT_LIBRARY_API extern CloudCmdDefaultTypeInternal _CloudCmd_default_instance_;
class CloudKeepaliveReq;
class CloudKeepaliveReqDefaultTypeInternal;
IOT_LIBRARY_API extern CloudKeepaliveReqDefaultTypeInternal _CloudKeepaliveReq_default_instance_;
class CloudKeepaliveResp;
class CloudKeepaliveRespDefaultTypeInternal;
IOT_LIBRARY_API extern CloudKeepaliveRespDefaultTypeInternal _CloudKeepaliveResp_default_instance_;
class CloudLoginReq;
class CloudLoginReqDefaultTypeInternal;
IOT_LIBRARY_API extern CloudLoginReqDefaultTypeInternal _CloudLoginReq_default_instance_;
class CloudLoginResp;
class CloudLoginRespDefaultTypeInternal;
IOT_LIBRARY_API extern CloudLoginRespDefaultTypeInternal _CloudLoginResp_default_instance_;
class CloudPtzAct;
class CloudPtzActDefaultTypeInternal;
IOT_LIBRARY_API extern CloudPtzActDefaultTypeInternal _CloudPtzAct_default_instance_;
class CloudPtzDelPreset;
class CloudPtzDelPresetDefaultTypeInternal;
IOT_LIBRARY_API extern CloudPtzDelPresetDefaultTypeInternal _CloudPtzDelPreset_default_instance_;
class CloudPtzSetPreset;
class CloudPtzSetPresetDefaultTypeInternal;
IOT_LIBRARY_API extern CloudPtzSetPresetDefaultTypeInternal _CloudPtzSetPreset_default_instance_;
class CloudSrcPushReq;
class CloudSrcPushReqDefaultTypeInternal;
IOT_LIBRARY_API extern CloudSrcPushReqDefaultTypeInternal _CloudSrcPushReq_default_instance_;
class CloudSrcPushResp;
class CloudSrcPushRespDefaultTypeInternal;
IOT_LIBRARY_API extern CloudSrcPushRespDefaultTypeInternal _CloudSrcPushResp_default_instance_;
class CloudStartStreamReq;
class CloudStartStreamReqDefaultTypeInternal;
IOT_LIBRARY_API extern CloudStartStreamReqDefaultTypeInternal _CloudStartStreamReq_default_instance_;
class CloudStartStreamResp;
class CloudStartStreamRespDefaultTypeInternal;
IOT_LIBRARY_API extern CloudStartStreamRespDefaultTypeInternal _CloudStartStreamResp_default_instance_;
class CloudStopStreamReq;
class CloudStopStreamReqDefaultTypeInternal;
IOT_LIBRARY_API extern CloudStopStreamReqDefaultTypeInternal _CloudStopStreamReq_default_instance_;
class CloudStopStreamResp;
class CloudStopStreamRespDefaultTypeInternal;
IOT_LIBRARY_API extern CloudStopStreamRespDefaultTypeInternal _CloudStopStreamResp_default_instance_;
class h5ClusterStatus;
class h5ClusterStatusDefaultTypeInternal;
IOT_LIBRARY_API extern h5ClusterStatusDefaultTypeInternal _h5ClusterStatus_default_instance_;
class h5PlayCmd;
class h5PlayCmdDefaultTypeInternal;
IOT_LIBRARY_API extern h5PlayCmdDefaultTypeInternal _h5PlayCmd_default_instance_;
class h5PtzAction;
class h5PtzActionDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzActionDefaultTypeInternal _h5PtzAction_default_instance_;
class h5PtzPreset;
class h5PtzPresetDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzPresetDefaultTypeInternal _h5PtzPreset_default_instance_;
class h5PtzPresetList;
class h5PtzPresetListDefaultTypeInternal;
IOT_LIBRARY_API extern h5PtzPresetListDefaultTypeInternal _h5PtzPresetList_default_instance_;
class h5Record;
class h5RecordDefaultTypeInternal;
IOT_LIBRARY_API extern h5RecordDefaultTypeInternal _h5Record_default_instance_;
class h5RecordList;
class h5RecordListDefaultTypeInternal;
IOT_LIBRARY_API extern h5RecordListDefaultTypeInternal _h5RecordList_default_instance_;
class h5Server;
class h5ServerDefaultTypeInternal;
IOT_LIBRARY_API extern h5ServerDefaultTypeInternal _h5Server_default_instance_;
class h5ServerList;
class h5ServerListDefaultTypeInternal;
IOT_LIBRARY_API extern h5ServerListDefaultTypeInternal _h5ServerList_default_instance_;
class h5Src;
class h5SrcDefaultTypeInternal;
IOT_LIBRARY_API extern h5SrcDefaultTypeInternal _h5Src_default_instance_;
class h5SrcList;
class h5SrcListDefaultTypeInternal;
IOT_LIBRARY_API extern h5SrcListDefaultTypeInternal _h5SrcList_default_instance_;
class h5Status;
class h5StatusDefaultTypeInternal;
IOT_LIBRARY_API extern h5StatusDefaultTypeInternal _h5Status_default_instance_;
class h5sClusterLoad;
class h5sClusterLoadDefaultTypeInternal;
IOT_LIBRARY_API extern h5sClusterLoadDefaultTypeInternal _h5sClusterLoad_default_instance_;
class h5sNodeServiceAddr;
class h5sNodeServiceAddrDefaultTypeInternal;
IOT_LIBRARY_API extern h5sNodeServiceAddrDefaultTypeInternal _h5sNodeServiceAddr_default_instance_;
class h5sVolume;
class h5sVolumeDefaultTypeInternal;
IOT_LIBRARY_API extern h5sVolumeDefaultTypeInternal _h5sVolume_default_instance_;
class h5sVolumeList;
class h5sVolumeListDefaultTypeInternal;
IOT_LIBRARY_API extern h5sVolumeListDefaultTypeInternal _h5sVolumeList_default_instance_;

namespace protobuf_h5scloud_2eproto {
// Internal implementation detail -- do not call these.
struct IOT_LIBRARY_API TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void IOT_LIBRARY_API AddDescriptors();
void IOT_LIBRARY_API InitDefaults();
}  // namespace protobuf_h5scloud_2eproto

enum CloudCmdType {
  CLOUD_CMD_ZERO = 0,
  CLOUD_CMD_LOGIN_REQ = 101,
  CLOUD_CMD_LOGIN_RESP = 102,
  CKPR = 103,
  CKPP = 104,
  CLOUD_CMD_SRC_PUSH_REQ = 201,
  CLOUD_CMD_SRC_PUSH_RESP = 202,
  CLOUD_CMD_PTZ_ACT = 301,
  CLOUD_CMD_PTZ_SET_PRESET = 302,
  CLOUD_CMD_PTZ_DEL_PRESET = 303,
  CLOUD_CMD_START_STREAM_REQ = 401,
  CLOUD_CMD_START_STREAM_RESP = 402,
  CLOUD_CMD_STOP_STREAM_REQ = 403,
  CLOUD_CMD_STOP_STREAM_RESP = 404,
  CloudCmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CloudCmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
IOT_LIBRARY_API bool CloudCmdType_IsValid(int value);
const CloudCmdType CloudCmdType_MIN = CLOUD_CMD_ZERO;
const CloudCmdType CloudCmdType_MAX = CLOUD_CMD_STOP_STREAM_RESP;
const int CloudCmdType_ARRAYSIZE = CloudCmdType_MAX + 1;

IOT_LIBRARY_API const ::google::protobuf::EnumDescriptor* CloudCmdType_descriptor();
inline const ::std::string& CloudCmdType_Name(CloudCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CloudCmdType_descriptor(), value);
}
inline bool CloudCmdType_Parse(
    const ::std::string& name, CloudCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CloudCmdType>(
    CloudCmdType_descriptor(), name, value);
}
// ===================================================================

class IOT_LIBRARY_API CloudLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudLoginReq) */ {
 public:
  CloudLoginReq();
  virtual ~CloudLoginReq();

  CloudLoginReq(const CloudLoginReq& from);

  inline CloudLoginReq& operator=(const CloudLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudLoginReq& default_instance();

  static inline const CloudLoginReq* internal_default_instance() {
    return reinterpret_cast<const CloudLoginReq*>(
               &_CloudLoginReq_default_instance_);
  }

  void Swap(CloudLoginReq* other);

  // implements Message ----------------------------------------------

  inline CloudLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudLoginReq& from);
  void MergeFrom(const CloudLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserName = 1;
  void clear_strusername();
  static const int kStrUserNameFieldNumber = 1;
  const ::std::string& strusername() const;
  void set_strusername(const ::std::string& value);
  #if LANG_CXX11
  void set_strusername(::std::string&& value);
  #endif
  void set_strusername(const char* value);
  void set_strusername(const char* value, size_t size);
  ::std::string* mutable_strusername();
  ::std::string* release_strusername();
  void set_allocated_strusername(::std::string* strusername);

  // string strPasswd = 2;
  void clear_strpasswd();
  static const int kStrPasswdFieldNumber = 2;
  const ::std::string& strpasswd() const;
  void set_strpasswd(const ::std::string& value);
  #if LANG_CXX11
  void set_strpasswd(::std::string&& value);
  #endif
  void set_strpasswd(const char* value);
  void set_strpasswd(const char* value, size_t size);
  ::std::string* mutable_strpasswd();
  ::std::string* release_strpasswd();
  void set_allocated_strpasswd(::std::string* strpasswd);

  // @@protoc_insertion_point(class_scope:CloudLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strusername_;
  ::google::protobuf::internal::ArenaStringPtr strpasswd_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudLoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudLoginResp) */ {
 public:
  CloudLoginResp();
  virtual ~CloudLoginResp();

  CloudLoginResp(const CloudLoginResp& from);

  inline CloudLoginResp& operator=(const CloudLoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudLoginResp& default_instance();

  static inline const CloudLoginResp* internal_default_instance() {
    return reinterpret_cast<const CloudLoginResp*>(
               &_CloudLoginResp_default_instance_);
  }

  void Swap(CloudLoginResp* other);

  // implements Message ----------------------------------------------

  inline CloudLoginResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudLoginResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudLoginResp& from);
  void MergeFrom(const CloudLoginResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudLoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bRet = 1;
  void clear_bret();
  static const int kBRetFieldNumber = 1;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:CloudLoginResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool bret_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudKeepaliveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudKeepaliveReq) */ {
 public:
  CloudKeepaliveReq();
  virtual ~CloudKeepaliveReq();

  CloudKeepaliveReq(const CloudKeepaliveReq& from);

  inline CloudKeepaliveReq& operator=(const CloudKeepaliveReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudKeepaliveReq& default_instance();

  static inline const CloudKeepaliveReq* internal_default_instance() {
    return reinterpret_cast<const CloudKeepaliveReq*>(
               &_CloudKeepaliveReq_default_instance_);
  }

  void Swap(CloudKeepaliveReq* other);

  // implements Message ----------------------------------------------

  inline CloudKeepaliveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudKeepaliveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudKeepaliveReq& from);
  void MergeFrom(const CloudKeepaliveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudKeepaliveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nKp = 1;
  void clear_nkp();
  static const int kNKpFieldNumber = 1;
  ::google::protobuf::int32 nkp() const;
  void set_nkp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CloudKeepaliveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nkp_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudKeepaliveResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudKeepaliveResp) */ {
 public:
  CloudKeepaliveResp();
  virtual ~CloudKeepaliveResp();

  CloudKeepaliveResp(const CloudKeepaliveResp& from);

  inline CloudKeepaliveResp& operator=(const CloudKeepaliveResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudKeepaliveResp& default_instance();

  static inline const CloudKeepaliveResp* internal_default_instance() {
    return reinterpret_cast<const CloudKeepaliveResp*>(
               &_CloudKeepaliveResp_default_instance_);
  }

  void Swap(CloudKeepaliveResp* other);

  // implements Message ----------------------------------------------

  inline CloudKeepaliveResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudKeepaliveResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudKeepaliveResp& from);
  void MergeFrom(const CloudKeepaliveResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudKeepaliveResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nKp = 1;
  void clear_nkp();
  static const int kNKpFieldNumber = 1;
  ::google::protobuf::int32 nkp() const;
  void set_nkp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CloudKeepaliveResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nkp_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudSrcPushReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudSrcPushReq) */ {
 public:
  CloudSrcPushReq();
  virtual ~CloudSrcPushReq();

  CloudSrcPushReq(const CloudSrcPushReq& from);

  inline CloudSrcPushReq& operator=(const CloudSrcPushReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudSrcPushReq& default_instance();

  static inline const CloudSrcPushReq* internal_default_instance() {
    return reinterpret_cast<const CloudSrcPushReq*>(
               &_CloudSrcPushReq_default_instance_);
  }

  void Swap(CloudSrcPushReq* other);

  // implements Message ----------------------------------------------

  inline CloudSrcPushReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudSrcPushReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudSrcPushReq& from);
  void MergeFrom(const CloudSrcPushReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudSrcPushReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .h5Src src = 3;
  int src_size() const;
  void clear_src();
  static const int kSrcFieldNumber = 3;
  const ::h5Src& src(int index) const;
  ::h5Src* mutable_src(int index);
  ::h5Src* add_src();
  ::google::protobuf::RepeatedPtrField< ::h5Src >*
      mutable_src();
  const ::google::protobuf::RepeatedPtrField< ::h5Src >&
      src() const;

  // string strServerName = 1;
  void clear_strservername();
  static const int kStrServerNameFieldNumber = 1;
  const ::std::string& strservername() const;
  void set_strservername(const ::std::string& value);
  #if LANG_CXX11
  void set_strservername(::std::string&& value);
  #endif
  void set_strservername(const char* value);
  void set_strservername(const char* value, size_t size);
  ::std::string* mutable_strservername();
  ::std::string* release_strservername();
  void set_allocated_strservername(::std::string* strservername);

  // string strServerToken = 2;
  void clear_strservertoken();
  static const int kStrServerTokenFieldNumber = 2;
  const ::std::string& strservertoken() const;
  void set_strservertoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strservertoken(::std::string&& value);
  #endif
  void set_strservertoken(const char* value);
  void set_strservertoken(const char* value, size_t size);
  ::std::string* mutable_strservertoken();
  ::std::string* release_strservertoken();
  void set_allocated_strservertoken(::std::string* strservertoken);

  // @@protoc_insertion_point(class_scope:CloudSrcPushReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::h5Src > src_;
  ::google::protobuf::internal::ArenaStringPtr strservername_;
  ::google::protobuf::internal::ArenaStringPtr strservertoken_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudSrcPushResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudSrcPushResp) */ {
 public:
  CloudSrcPushResp();
  virtual ~CloudSrcPushResp();

  CloudSrcPushResp(const CloudSrcPushResp& from);

  inline CloudSrcPushResp& operator=(const CloudSrcPushResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudSrcPushResp& default_instance();

  static inline const CloudSrcPushResp* internal_default_instance() {
    return reinterpret_cast<const CloudSrcPushResp*>(
               &_CloudSrcPushResp_default_instance_);
  }

  void Swap(CloudSrcPushResp* other);

  // implements Message ----------------------------------------------

  inline CloudSrcPushResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudSrcPushResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudSrcPushResp& from);
  void MergeFrom(const CloudSrcPushResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudSrcPushResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bRet = 1;
  void clear_bret();
  static const int kBRetFieldNumber = 1;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:CloudSrcPushResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool bret_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudPtzAct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudPtzAct) */ {
 public:
  CloudPtzAct();
  virtual ~CloudPtzAct();

  CloudPtzAct(const CloudPtzAct& from);

  inline CloudPtzAct& operator=(const CloudPtzAct& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudPtzAct& default_instance();

  static inline const CloudPtzAct* internal_default_instance() {
    return reinterpret_cast<const CloudPtzAct*>(
               &_CloudPtzAct_default_instance_);
  }

  void Swap(CloudPtzAct* other);

  // implements Message ----------------------------------------------

  inline CloudPtzAct* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudPtzAct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudPtzAct& from);
  void MergeFrom(const CloudPtzAct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudPtzAct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // .h5PtzAction act = 2;
  bool has_act() const;
  void clear_act();
  static const int kActFieldNumber = 2;
  const ::h5PtzAction& act() const;
  ::h5PtzAction* mutable_act();
  ::h5PtzAction* release_act();
  void set_allocated_act(::h5PtzAction* act);

  // @@protoc_insertion_point(class_scope:CloudPtzAct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::h5PtzAction* act_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudPtzSetPreset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudPtzSetPreset) */ {
 public:
  CloudPtzSetPreset();
  virtual ~CloudPtzSetPreset();

  CloudPtzSetPreset(const CloudPtzSetPreset& from);

  inline CloudPtzSetPreset& operator=(const CloudPtzSetPreset& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudPtzSetPreset& default_instance();

  static inline const CloudPtzSetPreset* internal_default_instance() {
    return reinterpret_cast<const CloudPtzSetPreset*>(
               &_CloudPtzSetPreset_default_instance_);
  }

  void Swap(CloudPtzSetPreset* other);

  // implements Message ----------------------------------------------

  inline CloudPtzSetPreset* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudPtzSetPreset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudPtzSetPreset& from);
  void MergeFrom(const CloudPtzSetPreset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudPtzSetPreset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // .h5PtzPreset preset = 2;
  bool has_preset() const;
  void clear_preset();
  static const int kPresetFieldNumber = 2;
  const ::h5PtzPreset& preset() const;
  ::h5PtzPreset* mutable_preset();
  ::h5PtzPreset* release_preset();
  void set_allocated_preset(::h5PtzPreset* preset);

  // @@protoc_insertion_point(class_scope:CloudPtzSetPreset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::h5PtzPreset* preset_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudPtzDelPreset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudPtzDelPreset) */ {
 public:
  CloudPtzDelPreset();
  virtual ~CloudPtzDelPreset();

  CloudPtzDelPreset(const CloudPtzDelPreset& from);

  inline CloudPtzDelPreset& operator=(const CloudPtzDelPreset& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudPtzDelPreset& default_instance();

  static inline const CloudPtzDelPreset* internal_default_instance() {
    return reinterpret_cast<const CloudPtzDelPreset*>(
               &_CloudPtzDelPreset_default_instance_);
  }

  void Swap(CloudPtzDelPreset* other);

  // implements Message ----------------------------------------------

  inline CloudPtzDelPreset* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudPtzDelPreset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudPtzDelPreset& from);
  void MergeFrom(const CloudPtzDelPreset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudPtzDelPreset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // string strPresetToken = 2;
  void clear_strpresettoken();
  static const int kStrPresetTokenFieldNumber = 2;
  const ::std::string& strpresettoken() const;
  void set_strpresettoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strpresettoken(::std::string&& value);
  #endif
  void set_strpresettoken(const char* value);
  void set_strpresettoken(const char* value, size_t size);
  ::std::string* mutable_strpresettoken();
  ::std::string* release_strpresettoken();
  void set_allocated_strpresettoken(::std::string* strpresettoken);

  // @@protoc_insertion_point(class_scope:CloudPtzDelPreset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::google::protobuf::internal::ArenaStringPtr strpresettoken_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudStartStreamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudStartStreamReq) */ {
 public:
  CloudStartStreamReq();
  virtual ~CloudStartStreamReq();

  CloudStartStreamReq(const CloudStartStreamReq& from);

  inline CloudStartStreamReq& operator=(const CloudStartStreamReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudStartStreamReq& default_instance();

  static inline const CloudStartStreamReq* internal_default_instance() {
    return reinterpret_cast<const CloudStartStreamReq*>(
               &_CloudStartStreamReq_default_instance_);
  }

  void Swap(CloudStartStreamReq* other);

  // implements Message ----------------------------------------------

  inline CloudStartStreamReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudStartStreamReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudStartStreamReq& from);
  void MergeFrom(const CloudStartStreamReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudStartStreamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // string strPushPath = 2;
  void clear_strpushpath();
  static const int kStrPushPathFieldNumber = 2;
  const ::std::string& strpushpath() const;
  void set_strpushpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strpushpath(::std::string&& value);
  #endif
  void set_strpushpath(const char* value);
  void set_strpushpath(const char* value, size_t size);
  ::std::string* mutable_strpushpath();
  ::std::string* release_strpushpath();
  void set_allocated_strpushpath(::std::string* strpushpath);

  // @@protoc_insertion_point(class_scope:CloudStartStreamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::google::protobuf::internal::ArenaStringPtr strpushpath_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudStartStreamResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudStartStreamResp) */ {
 public:
  CloudStartStreamResp();
  virtual ~CloudStartStreamResp();

  CloudStartStreamResp(const CloudStartStreamResp& from);

  inline CloudStartStreamResp& operator=(const CloudStartStreamResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudStartStreamResp& default_instance();

  static inline const CloudStartStreamResp* internal_default_instance() {
    return reinterpret_cast<const CloudStartStreamResp*>(
               &_CloudStartStreamResp_default_instance_);
  }

  void Swap(CloudStartStreamResp* other);

  // implements Message ----------------------------------------------

  inline CloudStartStreamResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudStartStreamResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudStartStreamResp& from);
  void MergeFrom(const CloudStartStreamResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudStartStreamResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // bool bRet = 2;
  void clear_bret();
  static const int kBRetFieldNumber = 2;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:CloudStartStreamResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  bool bret_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudStopStreamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudStopStreamReq) */ {
 public:
  CloudStopStreamReq();
  virtual ~CloudStopStreamReq();

  CloudStopStreamReq(const CloudStopStreamReq& from);

  inline CloudStopStreamReq& operator=(const CloudStopStreamReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudStopStreamReq& default_instance();

  static inline const CloudStopStreamReq* internal_default_instance() {
    return reinterpret_cast<const CloudStopStreamReq*>(
               &_CloudStopStreamReq_default_instance_);
  }

  void Swap(CloudStopStreamReq* other);

  // implements Message ----------------------------------------------

  inline CloudStopStreamReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudStopStreamReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudStopStreamReq& from);
  void MergeFrom(const CloudStopStreamReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudStopStreamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // @@protoc_insertion_point(class_scope:CloudStopStreamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudStopStreamResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudStopStreamResp) */ {
 public:
  CloudStopStreamResp();
  virtual ~CloudStopStreamResp();

  CloudStopStreamResp(const CloudStopStreamResp& from);

  inline CloudStopStreamResp& operator=(const CloudStopStreamResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudStopStreamResp& default_instance();

  static inline const CloudStopStreamResp* internal_default_instance() {
    return reinterpret_cast<const CloudStopStreamResp*>(
               &_CloudStopStreamResp_default_instance_);
  }

  void Swap(CloudStopStreamResp* other);

  // implements Message ----------------------------------------------

  inline CloudStopStreamResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudStopStreamResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudStopStreamResp& from);
  void MergeFrom(const CloudStopStreamResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudStopStreamResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // bool bRet = 2;
  void clear_bret();
  static const int kBRetFieldNumber = 2;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:CloudStopStreamResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  bool bret_;
  mutable int _cached_size_;
  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IOT_LIBRARY_API CloudCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CloudCmd) */ {
 public:
  CloudCmd();
  virtual ~CloudCmd();

  CloudCmd(const CloudCmd& from);

  inline CloudCmd& operator=(const CloudCmd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudCmd& default_instance();

  enum CmdCase {
    kLoginReq = 101,
    kLoginResp = 102,
    kKpR = 103,
    kKpP = 104,
    kSrcPushReq = 201,
    kSrcPushResp = 202,
    kPtzAct = 301,
    kSetPreset = 302,
    kDelpreset = 303,
    kStartStreamReq = 401,
    kStartStreamResp = 402,
    kStopStreamReq = 403,
    kStopStreamResp = 404,
    CMD_NOT_SET = 0,
  };

  static inline const CloudCmd* internal_default_instance() {
    return reinterpret_cast<const CloudCmd*>(
               &_CloudCmd_default_instance_);
  }

  void Swap(CloudCmd* other);

  // implements Message ----------------------------------------------

  inline CloudCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudCmd& from);
  void MergeFrom(const CloudCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CloudCmdType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::CloudCmdType type() const;
  void set_type(::CloudCmdType value);

  // .CloudLoginReq loginReq = 101;
  bool has_loginreq() const;
  void clear_loginreq();
  static const int kLoginReqFieldNumber = 101;
  const ::CloudLoginReq& loginreq() const;
  ::CloudLoginReq* mutable_loginreq();
  ::CloudLoginReq* release_loginreq();
  void set_allocated_loginreq(::CloudLoginReq* loginreq);

  // .CloudLoginResp loginResp = 102;
  bool has_loginresp() const;
  void clear_loginresp();
  static const int kLoginRespFieldNumber = 102;
  const ::CloudLoginResp& loginresp() const;
  ::CloudLoginResp* mutable_loginresp();
  ::CloudLoginResp* release_loginresp();
  void set_allocated_loginresp(::CloudLoginResp* loginresp);

  // .CloudKeepaliveReq kpR = 103;
  bool has_kpr() const;
  void clear_kpr();
  static const int kKpRFieldNumber = 103;
  const ::CloudKeepaliveReq& kpr() const;
  ::CloudKeepaliveReq* mutable_kpr();
  ::CloudKeepaliveReq* release_kpr();
  void set_allocated_kpr(::CloudKeepaliveReq* kpr);

  // .CloudKeepaliveResp kpP = 104;
  bool has_kpp() const;
  void clear_kpp();
  static const int kKpPFieldNumber = 104;
  const ::CloudKeepaliveResp& kpp() const;
  ::CloudKeepaliveResp* mutable_kpp();
  ::CloudKeepaliveResp* release_kpp();
  void set_allocated_kpp(::CloudKeepaliveResp* kpp);

  // .CloudSrcPushReq srcPushReq = 201;
  bool has_srcpushreq() const;
  void clear_srcpushreq();
  static const int kSrcPushReqFieldNumber = 201;
  const ::CloudSrcPushReq& srcpushreq() const;
  ::CloudSrcPushReq* mutable_srcpushreq();
  ::CloudSrcPushReq* release_srcpushreq();
  void set_allocated_srcpushreq(::CloudSrcPushReq* srcpushreq);

  // .CloudSrcPushResp srcPushResp = 202;
  bool has_srcpushresp() const;
  void clear_srcpushresp();
  static const int kSrcPushRespFieldNumber = 202;
  const ::CloudSrcPushResp& srcpushresp() const;
  ::CloudSrcPushResp* mutable_srcpushresp();
  ::CloudSrcPushResp* release_srcpushresp();
  void set_allocated_srcpushresp(::CloudSrcPushResp* srcpushresp);

  // .CloudPtzAct ptzAct = 301;
  bool has_ptzact() const;
  void clear_ptzact();
  static const int kPtzActFieldNumber = 301;
  const ::CloudPtzAct& ptzact() const;
  ::CloudPtzAct* mutable_ptzact();
  ::CloudPtzAct* release_ptzact();
  void set_allocated_ptzact(::CloudPtzAct* ptzact);

  // .CloudPtzSetPreset setPreset = 302;
  bool has_setpreset() const;
  void clear_setpreset();
  static const int kSetPresetFieldNumber = 302;
  const ::CloudPtzSetPreset& setpreset() const;
  ::CloudPtzSetPreset* mutable_setpreset();
  ::CloudPtzSetPreset* release_setpreset();
  void set_allocated_setpreset(::CloudPtzSetPreset* setpreset);

  // .CloudPtzDelPreset delpreset = 303;
  bool has_delpreset() const;
  void clear_delpreset();
  static const int kDelpresetFieldNumber = 303;
  const ::CloudPtzDelPreset& delpreset() const;
  ::CloudPtzDelPreset* mutable_delpreset();
  ::CloudPtzDelPreset* release_delpreset();
  void set_allocated_delpreset(::CloudPtzDelPreset* delpreset);

  // .CloudStartStreamReq startStreamReq = 401;
  bool has_startstreamreq() const;
  void clear_startstreamreq();
  static const int kStartStreamReqFieldNumber = 401;
  const ::CloudStartStreamReq& startstreamreq() const;
  ::CloudStartStreamReq* mutable_startstreamreq();
  ::CloudStartStreamReq* release_startstreamreq();
  void set_allocated_startstreamreq(::CloudStartStreamReq* startstreamreq);

  // .CloudStartStreamResp startStreamResp = 402;
  bool has_startstreamresp() const;
  void clear_startstreamresp();
  static const int kStartStreamRespFieldNumber = 402;
  const ::CloudStartStreamResp& startstreamresp() const;
  ::CloudStartStreamResp* mutable_startstreamresp();
  ::CloudStartStreamResp* release_startstreamresp();
  void set_allocated_startstreamresp(::CloudStartStreamResp* startstreamresp);

  // .CloudStopStreamReq stopStreamReq = 403;
  bool has_stopstreamreq() const;
  void clear_stopstreamreq();
  static const int kStopStreamReqFieldNumber = 403;
  const ::CloudStopStreamReq& stopstreamreq() const;
  ::CloudStopStreamReq* mutable_stopstreamreq();
  ::CloudStopStreamReq* release_stopstreamreq();
  void set_allocated_stopstreamreq(::CloudStopStreamReq* stopstreamreq);

  // .CloudStopStreamResp stopStreamResp = 404;
  bool has_stopstreamresp() const;
  void clear_stopstreamresp();
  static const int kStopStreamRespFieldNumber = 404;
  const ::CloudStopStreamResp& stopstreamresp() const;
  ::CloudStopStreamResp* mutable_stopstreamresp();
  ::CloudStopStreamResp* release_stopstreamresp();
  void set_allocated_stopstreamresp(::CloudStopStreamResp* stopstreamresp);

  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:CloudCmd)
 private:
  void set_has_loginreq();
  void set_has_loginresp();
  void set_has_kpr();
  void set_has_kpp();
  void set_has_srcpushreq();
  void set_has_srcpushresp();
  void set_has_ptzact();
  void set_has_setpreset();
  void set_has_delpreset();
  void set_has_startstreamreq();
  void set_has_startstreamresp();
  void set_has_stopstreamreq();
  void set_has_stopstreamresp();

  inline bool has_cmd() const;
  void clear_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  union CmdUnion {
    CmdUnion() {}
    ::CloudLoginReq* loginreq_;
    ::CloudLoginResp* loginresp_;
    ::CloudKeepaliveReq* kpr_;
    ::CloudKeepaliveResp* kpp_;
    ::CloudSrcPushReq* srcpushreq_;
    ::CloudSrcPushResp* srcpushresp_;
    ::CloudPtzAct* ptzact_;
    ::CloudPtzSetPreset* setpreset_;
    ::CloudPtzDelPreset* delpreset_;
    ::CloudStartStreamReq* startstreamreq_;
    ::CloudStartStreamResp* startstreamresp_;
    ::CloudStopStreamReq* stopstreamreq_;
    ::CloudStopStreamResp* stopstreamresp_;
  } cmd_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct IOT_LIBRARY_API protobuf_h5scloud_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CloudLoginReq

// string strUserName = 1;
inline void CloudLoginReq::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudLoginReq::strusername() const {
  // @@protoc_insertion_point(field_get:CloudLoginReq.strUserName)
  return strusername_.GetNoArena();
}
inline void CloudLoginReq::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudLoginReq.strUserName)
}
#if LANG_CXX11
inline void CloudLoginReq::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudLoginReq.strUserName)
}
#endif
inline void CloudLoginReq::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudLoginReq.strUserName)
}
inline void CloudLoginReq::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudLoginReq.strUserName)
}
inline ::std::string* CloudLoginReq::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:CloudLoginReq.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudLoginReq::release_strusername() {
  // @@protoc_insertion_point(field_release:CloudLoginReq.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudLoginReq::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:CloudLoginReq.strUserName)
}

// string strPasswd = 2;
inline void CloudLoginReq::clear_strpasswd() {
  strpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudLoginReq::strpasswd() const {
  // @@protoc_insertion_point(field_get:CloudLoginReq.strPasswd)
  return strpasswd_.GetNoArena();
}
inline void CloudLoginReq::set_strpasswd(const ::std::string& value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudLoginReq.strPasswd)
}
#if LANG_CXX11
inline void CloudLoginReq::set_strpasswd(::std::string&& value) {
  
  strpasswd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudLoginReq.strPasswd)
}
#endif
inline void CloudLoginReq::set_strpasswd(const char* value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudLoginReq.strPasswd)
}
inline void CloudLoginReq::set_strpasswd(const char* value, size_t size) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudLoginReq.strPasswd)
}
inline ::std::string* CloudLoginReq::mutable_strpasswd() {
  
  // @@protoc_insertion_point(field_mutable:CloudLoginReq.strPasswd)
  return strpasswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudLoginReq::release_strpasswd() {
  // @@protoc_insertion_point(field_release:CloudLoginReq.strPasswd)
  
  return strpasswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudLoginReq::set_allocated_strpasswd(::std::string* strpasswd) {
  if (strpasswd != NULL) {
    
  } else {
    
  }
  strpasswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpasswd);
  // @@protoc_insertion_point(field_set_allocated:CloudLoginReq.strPasswd)
}

// -------------------------------------------------------------------

// CloudLoginResp

// bool bRet = 1;
inline void CloudLoginResp::clear_bret() {
  bret_ = false;
}
inline bool CloudLoginResp::bret() const {
  // @@protoc_insertion_point(field_get:CloudLoginResp.bRet)
  return bret_;
}
inline void CloudLoginResp::set_bret(bool value) {
  
  bret_ = value;
  // @@protoc_insertion_point(field_set:CloudLoginResp.bRet)
}

// -------------------------------------------------------------------

// CloudKeepaliveReq

// int32 nKp = 1;
inline void CloudKeepaliveReq::clear_nkp() {
  nkp_ = 0;
}
inline ::google::protobuf::int32 CloudKeepaliveReq::nkp() const {
  // @@protoc_insertion_point(field_get:CloudKeepaliveReq.nKp)
  return nkp_;
}
inline void CloudKeepaliveReq::set_nkp(::google::protobuf::int32 value) {
  
  nkp_ = value;
  // @@protoc_insertion_point(field_set:CloudKeepaliveReq.nKp)
}

// -------------------------------------------------------------------

// CloudKeepaliveResp

// int32 nKp = 1;
inline void CloudKeepaliveResp::clear_nkp() {
  nkp_ = 0;
}
inline ::google::protobuf::int32 CloudKeepaliveResp::nkp() const {
  // @@protoc_insertion_point(field_get:CloudKeepaliveResp.nKp)
  return nkp_;
}
inline void CloudKeepaliveResp::set_nkp(::google::protobuf::int32 value) {
  
  nkp_ = value;
  // @@protoc_insertion_point(field_set:CloudKeepaliveResp.nKp)
}

// -------------------------------------------------------------------

// CloudSrcPushReq

// string strServerName = 1;
inline void CloudSrcPushReq::clear_strservername() {
  strservername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudSrcPushReq::strservername() const {
  // @@protoc_insertion_point(field_get:CloudSrcPushReq.strServerName)
  return strservername_.GetNoArena();
}
inline void CloudSrcPushReq::set_strservername(const ::std::string& value) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudSrcPushReq.strServerName)
}
#if LANG_CXX11
inline void CloudSrcPushReq::set_strservername(::std::string&& value) {
  
  strservername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudSrcPushReq.strServerName)
}
#endif
inline void CloudSrcPushReq::set_strservername(const char* value) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudSrcPushReq.strServerName)
}
inline void CloudSrcPushReq::set_strservername(const char* value, size_t size) {
  
  strservername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudSrcPushReq.strServerName)
}
inline ::std::string* CloudSrcPushReq::mutable_strservername() {
  
  // @@protoc_insertion_point(field_mutable:CloudSrcPushReq.strServerName)
  return strservername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudSrcPushReq::release_strservername() {
  // @@protoc_insertion_point(field_release:CloudSrcPushReq.strServerName)
  
  return strservername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudSrcPushReq::set_allocated_strservername(::std::string* strservername) {
  if (strservername != NULL) {
    
  } else {
    
  }
  strservername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strservername);
  // @@protoc_insertion_point(field_set_allocated:CloudSrcPushReq.strServerName)
}

// string strServerToken = 2;
inline void CloudSrcPushReq::clear_strservertoken() {
  strservertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudSrcPushReq::strservertoken() const {
  // @@protoc_insertion_point(field_get:CloudSrcPushReq.strServerToken)
  return strservertoken_.GetNoArena();
}
inline void CloudSrcPushReq::set_strservertoken(const ::std::string& value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudSrcPushReq.strServerToken)
}
#if LANG_CXX11
inline void CloudSrcPushReq::set_strservertoken(::std::string&& value) {
  
  strservertoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudSrcPushReq.strServerToken)
}
#endif
inline void CloudSrcPushReq::set_strservertoken(const char* value) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudSrcPushReq.strServerToken)
}
inline void CloudSrcPushReq::set_strservertoken(const char* value, size_t size) {
  
  strservertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudSrcPushReq.strServerToken)
}
inline ::std::string* CloudSrcPushReq::mutable_strservertoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudSrcPushReq.strServerToken)
  return strservertoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudSrcPushReq::release_strservertoken() {
  // @@protoc_insertion_point(field_release:CloudSrcPushReq.strServerToken)
  
  return strservertoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudSrcPushReq::set_allocated_strservertoken(::std::string* strservertoken) {
  if (strservertoken != NULL) {
    
  } else {
    
  }
  strservertoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strservertoken);
  // @@protoc_insertion_point(field_set_allocated:CloudSrcPushReq.strServerToken)
}

// repeated .h5Src src = 3;
inline int CloudSrcPushReq::src_size() const {
  return src_.size();
}
inline void CloudSrcPushReq::clear_src() {
  src_.Clear();
}
inline const ::h5Src& CloudSrcPushReq::src(int index) const {
  // @@protoc_insertion_point(field_get:CloudSrcPushReq.src)
  return src_.Get(index);
}
inline ::h5Src* CloudSrcPushReq::mutable_src(int index) {
  // @@protoc_insertion_point(field_mutable:CloudSrcPushReq.src)
  return src_.Mutable(index);
}
inline ::h5Src* CloudSrcPushReq::add_src() {
  // @@protoc_insertion_point(field_add:CloudSrcPushReq.src)
  return src_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::h5Src >*
CloudSrcPushReq::mutable_src() {
  // @@protoc_insertion_point(field_mutable_list:CloudSrcPushReq.src)
  return &src_;
}
inline const ::google::protobuf::RepeatedPtrField< ::h5Src >&
CloudSrcPushReq::src() const {
  // @@protoc_insertion_point(field_list:CloudSrcPushReq.src)
  return src_;
}

// -------------------------------------------------------------------

// CloudSrcPushResp

// bool bRet = 1;
inline void CloudSrcPushResp::clear_bret() {
  bret_ = false;
}
inline bool CloudSrcPushResp::bret() const {
  // @@protoc_insertion_point(field_get:CloudSrcPushResp.bRet)
  return bret_;
}
inline void CloudSrcPushResp::set_bret(bool value) {
  
  bret_ = value;
  // @@protoc_insertion_point(field_set:CloudSrcPushResp.bRet)
}

// -------------------------------------------------------------------

// CloudPtzAct

// string strToken = 1;
inline void CloudPtzAct::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPtzAct::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudPtzAct.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudPtzAct::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudPtzAct.strToken)
}
#if LANG_CXX11
inline void CloudPtzAct::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudPtzAct.strToken)
}
#endif
inline void CloudPtzAct::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudPtzAct.strToken)
}
inline void CloudPtzAct::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudPtzAct.strToken)
}
inline ::std::string* CloudPtzAct::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudPtzAct.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPtzAct::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudPtzAct.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPtzAct::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudPtzAct.strToken)
}

// .h5PtzAction act = 2;
inline bool CloudPtzAct::has_act() const {
  return this != internal_default_instance() && act_ != NULL;
}
inline void CloudPtzAct::clear_act() {
  if (GetArenaNoVirtual() == NULL && act_ != NULL) delete act_;
  act_ = NULL;
}
inline const ::h5PtzAction& CloudPtzAct::act() const {
  // @@protoc_insertion_point(field_get:CloudPtzAct.act)
  return act_ != NULL ? *act_
                         : *::h5PtzAction::internal_default_instance();
}
inline ::h5PtzAction* CloudPtzAct::mutable_act() {
  
  if (act_ == NULL) {
    act_ = new ::h5PtzAction;
  }
  // @@protoc_insertion_point(field_mutable:CloudPtzAct.act)
  return act_;
}
inline ::h5PtzAction* CloudPtzAct::release_act() {
  // @@protoc_insertion_point(field_release:CloudPtzAct.act)
  
  ::h5PtzAction* temp = act_;
  act_ = NULL;
  return temp;
}
inline void CloudPtzAct::set_allocated_act(::h5PtzAction* act) {
  delete act_;
  act_ = act;
  if (act) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CloudPtzAct.act)
}

// -------------------------------------------------------------------

// CloudPtzSetPreset

// string strToken = 1;
inline void CloudPtzSetPreset::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPtzSetPreset::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudPtzSetPreset.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudPtzSetPreset::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudPtzSetPreset.strToken)
}
#if LANG_CXX11
inline void CloudPtzSetPreset::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudPtzSetPreset.strToken)
}
#endif
inline void CloudPtzSetPreset::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudPtzSetPreset.strToken)
}
inline void CloudPtzSetPreset::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudPtzSetPreset.strToken)
}
inline ::std::string* CloudPtzSetPreset::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudPtzSetPreset.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPtzSetPreset::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudPtzSetPreset.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPtzSetPreset::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudPtzSetPreset.strToken)
}

// .h5PtzPreset preset = 2;
inline bool CloudPtzSetPreset::has_preset() const {
  return this != internal_default_instance() && preset_ != NULL;
}
inline void CloudPtzSetPreset::clear_preset() {
  if (GetArenaNoVirtual() == NULL && preset_ != NULL) delete preset_;
  preset_ = NULL;
}
inline const ::h5PtzPreset& CloudPtzSetPreset::preset() const {
  // @@protoc_insertion_point(field_get:CloudPtzSetPreset.preset)
  return preset_ != NULL ? *preset_
                         : *::h5PtzPreset::internal_default_instance();
}
inline ::h5PtzPreset* CloudPtzSetPreset::mutable_preset() {
  
  if (preset_ == NULL) {
    preset_ = new ::h5PtzPreset;
  }
  // @@protoc_insertion_point(field_mutable:CloudPtzSetPreset.preset)
  return preset_;
}
inline ::h5PtzPreset* CloudPtzSetPreset::release_preset() {
  // @@protoc_insertion_point(field_release:CloudPtzSetPreset.preset)
  
  ::h5PtzPreset* temp = preset_;
  preset_ = NULL;
  return temp;
}
inline void CloudPtzSetPreset::set_allocated_preset(::h5PtzPreset* preset) {
  delete preset_;
  preset_ = preset;
  if (preset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CloudPtzSetPreset.preset)
}

// -------------------------------------------------------------------

// CloudPtzDelPreset

// string strToken = 1;
inline void CloudPtzDelPreset::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPtzDelPreset::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudPtzDelPreset.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudPtzDelPreset::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudPtzDelPreset.strToken)
}
#if LANG_CXX11
inline void CloudPtzDelPreset::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudPtzDelPreset.strToken)
}
#endif
inline void CloudPtzDelPreset::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudPtzDelPreset.strToken)
}
inline void CloudPtzDelPreset::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudPtzDelPreset.strToken)
}
inline ::std::string* CloudPtzDelPreset::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudPtzDelPreset.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPtzDelPreset::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudPtzDelPreset.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPtzDelPreset::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudPtzDelPreset.strToken)
}

// string strPresetToken = 2;
inline void CloudPtzDelPreset::clear_strpresettoken() {
  strpresettoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPtzDelPreset::strpresettoken() const {
  // @@protoc_insertion_point(field_get:CloudPtzDelPreset.strPresetToken)
  return strpresettoken_.GetNoArena();
}
inline void CloudPtzDelPreset::set_strpresettoken(const ::std::string& value) {
  
  strpresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudPtzDelPreset.strPresetToken)
}
#if LANG_CXX11
inline void CloudPtzDelPreset::set_strpresettoken(::std::string&& value) {
  
  strpresettoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudPtzDelPreset.strPresetToken)
}
#endif
inline void CloudPtzDelPreset::set_strpresettoken(const char* value) {
  
  strpresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudPtzDelPreset.strPresetToken)
}
inline void CloudPtzDelPreset::set_strpresettoken(const char* value, size_t size) {
  
  strpresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudPtzDelPreset.strPresetToken)
}
inline ::std::string* CloudPtzDelPreset::mutable_strpresettoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudPtzDelPreset.strPresetToken)
  return strpresettoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPtzDelPreset::release_strpresettoken() {
  // @@protoc_insertion_point(field_release:CloudPtzDelPreset.strPresetToken)
  
  return strpresettoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPtzDelPreset::set_allocated_strpresettoken(::std::string* strpresettoken) {
  if (strpresettoken != NULL) {
    
  } else {
    
  }
  strpresettoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpresettoken);
  // @@protoc_insertion_point(field_set_allocated:CloudPtzDelPreset.strPresetToken)
}

// -------------------------------------------------------------------

// CloudStartStreamReq

// string strToken = 1;
inline void CloudStartStreamReq::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudStartStreamReq::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudStartStreamReq.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudStartStreamReq::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudStartStreamReq.strToken)
}
#if LANG_CXX11
inline void CloudStartStreamReq::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudStartStreamReq.strToken)
}
#endif
inline void CloudStartStreamReq::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudStartStreamReq.strToken)
}
inline void CloudStartStreamReq::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudStartStreamReq.strToken)
}
inline ::std::string* CloudStartStreamReq::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudStartStreamReq.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudStartStreamReq::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudStartStreamReq.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudStartStreamReq::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudStartStreamReq.strToken)
}

// string strPushPath = 2;
inline void CloudStartStreamReq::clear_strpushpath() {
  strpushpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudStartStreamReq::strpushpath() const {
  // @@protoc_insertion_point(field_get:CloudStartStreamReq.strPushPath)
  return strpushpath_.GetNoArena();
}
inline void CloudStartStreamReq::set_strpushpath(const ::std::string& value) {
  
  strpushpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudStartStreamReq.strPushPath)
}
#if LANG_CXX11
inline void CloudStartStreamReq::set_strpushpath(::std::string&& value) {
  
  strpushpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudStartStreamReq.strPushPath)
}
#endif
inline void CloudStartStreamReq::set_strpushpath(const char* value) {
  
  strpushpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudStartStreamReq.strPushPath)
}
inline void CloudStartStreamReq::set_strpushpath(const char* value, size_t size) {
  
  strpushpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudStartStreamReq.strPushPath)
}
inline ::std::string* CloudStartStreamReq::mutable_strpushpath() {
  
  // @@protoc_insertion_point(field_mutable:CloudStartStreamReq.strPushPath)
  return strpushpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudStartStreamReq::release_strpushpath() {
  // @@protoc_insertion_point(field_release:CloudStartStreamReq.strPushPath)
  
  return strpushpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudStartStreamReq::set_allocated_strpushpath(::std::string* strpushpath) {
  if (strpushpath != NULL) {
    
  } else {
    
  }
  strpushpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpushpath);
  // @@protoc_insertion_point(field_set_allocated:CloudStartStreamReq.strPushPath)
}

// -------------------------------------------------------------------

// CloudStartStreamResp

// string strToken = 1;
inline void CloudStartStreamResp::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudStartStreamResp::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudStartStreamResp.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudStartStreamResp::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudStartStreamResp.strToken)
}
#if LANG_CXX11
inline void CloudStartStreamResp::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudStartStreamResp.strToken)
}
#endif
inline void CloudStartStreamResp::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudStartStreamResp.strToken)
}
inline void CloudStartStreamResp::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudStartStreamResp.strToken)
}
inline ::std::string* CloudStartStreamResp::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudStartStreamResp.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudStartStreamResp::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudStartStreamResp.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudStartStreamResp::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudStartStreamResp.strToken)
}

// bool bRet = 2;
inline void CloudStartStreamResp::clear_bret() {
  bret_ = false;
}
inline bool CloudStartStreamResp::bret() const {
  // @@protoc_insertion_point(field_get:CloudStartStreamResp.bRet)
  return bret_;
}
inline void CloudStartStreamResp::set_bret(bool value) {
  
  bret_ = value;
  // @@protoc_insertion_point(field_set:CloudStartStreamResp.bRet)
}

// -------------------------------------------------------------------

// CloudStopStreamReq

// string strToken = 1;
inline void CloudStopStreamReq::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudStopStreamReq::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudStopStreamReq.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudStopStreamReq::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudStopStreamReq.strToken)
}
#if LANG_CXX11
inline void CloudStopStreamReq::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudStopStreamReq.strToken)
}
#endif
inline void CloudStopStreamReq::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudStopStreamReq.strToken)
}
inline void CloudStopStreamReq::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudStopStreamReq.strToken)
}
inline ::std::string* CloudStopStreamReq::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudStopStreamReq.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudStopStreamReq::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudStopStreamReq.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudStopStreamReq::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudStopStreamReq.strToken)
}

// -------------------------------------------------------------------

// CloudStopStreamResp

// string strToken = 1;
inline void CloudStopStreamResp::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudStopStreamResp::strtoken() const {
  // @@protoc_insertion_point(field_get:CloudStopStreamResp.strToken)
  return strtoken_.GetNoArena();
}
inline void CloudStopStreamResp::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CloudStopStreamResp.strToken)
}
#if LANG_CXX11
inline void CloudStopStreamResp::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CloudStopStreamResp.strToken)
}
#endif
inline void CloudStopStreamResp::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CloudStopStreamResp.strToken)
}
inline void CloudStopStreamResp::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CloudStopStreamResp.strToken)
}
inline ::std::string* CloudStopStreamResp::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:CloudStopStreamResp.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudStopStreamResp::release_strtoken() {
  // @@protoc_insertion_point(field_release:CloudStopStreamResp.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudStopStreamResp::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:CloudStopStreamResp.strToken)
}

// bool bRet = 2;
inline void CloudStopStreamResp::clear_bret() {
  bret_ = false;
}
inline bool CloudStopStreamResp::bret() const {
  // @@protoc_insertion_point(field_get:CloudStopStreamResp.bRet)
  return bret_;
}
inline void CloudStopStreamResp::set_bret(bool value) {
  
  bret_ = value;
  // @@protoc_insertion_point(field_set:CloudStopStreamResp.bRet)
}

// -------------------------------------------------------------------

// CloudCmd

// .CloudCmdType type = 1;
inline void CloudCmd::clear_type() {
  type_ = 0;
}
inline ::CloudCmdType CloudCmd::type() const {
  // @@protoc_insertion_point(field_get:CloudCmd.type)
  return static_cast< ::CloudCmdType >(type_);
}
inline void CloudCmd::set_type(::CloudCmdType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CloudCmd.type)
}

// .CloudLoginReq loginReq = 101;
inline bool CloudCmd::has_loginreq() const {
  return cmd_case() == kLoginReq;
}
inline void CloudCmd::set_has_loginreq() {
  _oneof_case_[0] = kLoginReq;
}
inline void CloudCmd::clear_loginreq() {
  if (has_loginreq()) {
    delete cmd_.loginreq_;
    clear_has_cmd();
  }
}
inline  const ::CloudLoginReq& CloudCmd::loginreq() const {
  // @@protoc_insertion_point(field_get:CloudCmd.loginReq)
  return has_loginreq()
      ? *cmd_.loginreq_
      : ::CloudLoginReq::default_instance();
}
inline ::CloudLoginReq* CloudCmd::mutable_loginreq() {
  if (!has_loginreq()) {
    clear_cmd();
    set_has_loginreq();
    cmd_.loginreq_ = new ::CloudLoginReq;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.loginReq)
  return cmd_.loginreq_;
}
inline ::CloudLoginReq* CloudCmd::release_loginreq() {
  // @@protoc_insertion_point(field_release:CloudCmd.loginReq)
  if (has_loginreq()) {
    clear_has_cmd();
    ::CloudLoginReq* temp = cmd_.loginreq_;
    cmd_.loginreq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_loginreq(::CloudLoginReq* loginreq) {
  clear_cmd();
  if (loginreq) {
    set_has_loginreq();
    cmd_.loginreq_ = loginreq;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.loginReq)
}

// .CloudLoginResp loginResp = 102;
inline bool CloudCmd::has_loginresp() const {
  return cmd_case() == kLoginResp;
}
inline void CloudCmd::set_has_loginresp() {
  _oneof_case_[0] = kLoginResp;
}
inline void CloudCmd::clear_loginresp() {
  if (has_loginresp()) {
    delete cmd_.loginresp_;
    clear_has_cmd();
  }
}
inline  const ::CloudLoginResp& CloudCmd::loginresp() const {
  // @@protoc_insertion_point(field_get:CloudCmd.loginResp)
  return has_loginresp()
      ? *cmd_.loginresp_
      : ::CloudLoginResp::default_instance();
}
inline ::CloudLoginResp* CloudCmd::mutable_loginresp() {
  if (!has_loginresp()) {
    clear_cmd();
    set_has_loginresp();
    cmd_.loginresp_ = new ::CloudLoginResp;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.loginResp)
  return cmd_.loginresp_;
}
inline ::CloudLoginResp* CloudCmd::release_loginresp() {
  // @@protoc_insertion_point(field_release:CloudCmd.loginResp)
  if (has_loginresp()) {
    clear_has_cmd();
    ::CloudLoginResp* temp = cmd_.loginresp_;
    cmd_.loginresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_loginresp(::CloudLoginResp* loginresp) {
  clear_cmd();
  if (loginresp) {
    set_has_loginresp();
    cmd_.loginresp_ = loginresp;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.loginResp)
}

// .CloudKeepaliveReq kpR = 103;
inline bool CloudCmd::has_kpr() const {
  return cmd_case() == kKpR;
}
inline void CloudCmd::set_has_kpr() {
  _oneof_case_[0] = kKpR;
}
inline void CloudCmd::clear_kpr() {
  if (has_kpr()) {
    delete cmd_.kpr_;
    clear_has_cmd();
  }
}
inline  const ::CloudKeepaliveReq& CloudCmd::kpr() const {
  // @@protoc_insertion_point(field_get:CloudCmd.kpR)
  return has_kpr()
      ? *cmd_.kpr_
      : ::CloudKeepaliveReq::default_instance();
}
inline ::CloudKeepaliveReq* CloudCmd::mutable_kpr() {
  if (!has_kpr()) {
    clear_cmd();
    set_has_kpr();
    cmd_.kpr_ = new ::CloudKeepaliveReq;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.kpR)
  return cmd_.kpr_;
}
inline ::CloudKeepaliveReq* CloudCmd::release_kpr() {
  // @@protoc_insertion_point(field_release:CloudCmd.kpR)
  if (has_kpr()) {
    clear_has_cmd();
    ::CloudKeepaliveReq* temp = cmd_.kpr_;
    cmd_.kpr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_kpr(::CloudKeepaliveReq* kpr) {
  clear_cmd();
  if (kpr) {
    set_has_kpr();
    cmd_.kpr_ = kpr;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.kpR)
}

// .CloudKeepaliveResp kpP = 104;
inline bool CloudCmd::has_kpp() const {
  return cmd_case() == kKpP;
}
inline void CloudCmd::set_has_kpp() {
  _oneof_case_[0] = kKpP;
}
inline void CloudCmd::clear_kpp() {
  if (has_kpp()) {
    delete cmd_.kpp_;
    clear_has_cmd();
  }
}
inline  const ::CloudKeepaliveResp& CloudCmd::kpp() const {
  // @@protoc_insertion_point(field_get:CloudCmd.kpP)
  return has_kpp()
      ? *cmd_.kpp_
      : ::CloudKeepaliveResp::default_instance();
}
inline ::CloudKeepaliveResp* CloudCmd::mutable_kpp() {
  if (!has_kpp()) {
    clear_cmd();
    set_has_kpp();
    cmd_.kpp_ = new ::CloudKeepaliveResp;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.kpP)
  return cmd_.kpp_;
}
inline ::CloudKeepaliveResp* CloudCmd::release_kpp() {
  // @@protoc_insertion_point(field_release:CloudCmd.kpP)
  if (has_kpp()) {
    clear_has_cmd();
    ::CloudKeepaliveResp* temp = cmd_.kpp_;
    cmd_.kpp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_kpp(::CloudKeepaliveResp* kpp) {
  clear_cmd();
  if (kpp) {
    set_has_kpp();
    cmd_.kpp_ = kpp;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.kpP)
}

// .CloudSrcPushReq srcPushReq = 201;
inline bool CloudCmd::has_srcpushreq() const {
  return cmd_case() == kSrcPushReq;
}
inline void CloudCmd::set_has_srcpushreq() {
  _oneof_case_[0] = kSrcPushReq;
}
inline void CloudCmd::clear_srcpushreq() {
  if (has_srcpushreq()) {
    delete cmd_.srcpushreq_;
    clear_has_cmd();
  }
}
inline  const ::CloudSrcPushReq& CloudCmd::srcpushreq() const {
  // @@protoc_insertion_point(field_get:CloudCmd.srcPushReq)
  return has_srcpushreq()
      ? *cmd_.srcpushreq_
      : ::CloudSrcPushReq::default_instance();
}
inline ::CloudSrcPushReq* CloudCmd::mutable_srcpushreq() {
  if (!has_srcpushreq()) {
    clear_cmd();
    set_has_srcpushreq();
    cmd_.srcpushreq_ = new ::CloudSrcPushReq;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.srcPushReq)
  return cmd_.srcpushreq_;
}
inline ::CloudSrcPushReq* CloudCmd::release_srcpushreq() {
  // @@protoc_insertion_point(field_release:CloudCmd.srcPushReq)
  if (has_srcpushreq()) {
    clear_has_cmd();
    ::CloudSrcPushReq* temp = cmd_.srcpushreq_;
    cmd_.srcpushreq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_srcpushreq(::CloudSrcPushReq* srcpushreq) {
  clear_cmd();
  if (srcpushreq) {
    set_has_srcpushreq();
    cmd_.srcpushreq_ = srcpushreq;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.srcPushReq)
}

// .CloudSrcPushResp srcPushResp = 202;
inline bool CloudCmd::has_srcpushresp() const {
  return cmd_case() == kSrcPushResp;
}
inline void CloudCmd::set_has_srcpushresp() {
  _oneof_case_[0] = kSrcPushResp;
}
inline void CloudCmd::clear_srcpushresp() {
  if (has_srcpushresp()) {
    delete cmd_.srcpushresp_;
    clear_has_cmd();
  }
}
inline  const ::CloudSrcPushResp& CloudCmd::srcpushresp() const {
  // @@protoc_insertion_point(field_get:CloudCmd.srcPushResp)
  return has_srcpushresp()
      ? *cmd_.srcpushresp_
      : ::CloudSrcPushResp::default_instance();
}
inline ::CloudSrcPushResp* CloudCmd::mutable_srcpushresp() {
  if (!has_srcpushresp()) {
    clear_cmd();
    set_has_srcpushresp();
    cmd_.srcpushresp_ = new ::CloudSrcPushResp;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.srcPushResp)
  return cmd_.srcpushresp_;
}
inline ::CloudSrcPushResp* CloudCmd::release_srcpushresp() {
  // @@protoc_insertion_point(field_release:CloudCmd.srcPushResp)
  if (has_srcpushresp()) {
    clear_has_cmd();
    ::CloudSrcPushResp* temp = cmd_.srcpushresp_;
    cmd_.srcpushresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_srcpushresp(::CloudSrcPushResp* srcpushresp) {
  clear_cmd();
  if (srcpushresp) {
    set_has_srcpushresp();
    cmd_.srcpushresp_ = srcpushresp;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.srcPushResp)
}

// .CloudPtzAct ptzAct = 301;
inline bool CloudCmd::has_ptzact() const {
  return cmd_case() == kPtzAct;
}
inline void CloudCmd::set_has_ptzact() {
  _oneof_case_[0] = kPtzAct;
}
inline void CloudCmd::clear_ptzact() {
  if (has_ptzact()) {
    delete cmd_.ptzact_;
    clear_has_cmd();
  }
}
inline  const ::CloudPtzAct& CloudCmd::ptzact() const {
  // @@protoc_insertion_point(field_get:CloudCmd.ptzAct)
  return has_ptzact()
      ? *cmd_.ptzact_
      : ::CloudPtzAct::default_instance();
}
inline ::CloudPtzAct* CloudCmd::mutable_ptzact() {
  if (!has_ptzact()) {
    clear_cmd();
    set_has_ptzact();
    cmd_.ptzact_ = new ::CloudPtzAct;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.ptzAct)
  return cmd_.ptzact_;
}
inline ::CloudPtzAct* CloudCmd::release_ptzact() {
  // @@protoc_insertion_point(field_release:CloudCmd.ptzAct)
  if (has_ptzact()) {
    clear_has_cmd();
    ::CloudPtzAct* temp = cmd_.ptzact_;
    cmd_.ptzact_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_ptzact(::CloudPtzAct* ptzact) {
  clear_cmd();
  if (ptzact) {
    set_has_ptzact();
    cmd_.ptzact_ = ptzact;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.ptzAct)
}

// .CloudPtzSetPreset setPreset = 302;
inline bool CloudCmd::has_setpreset() const {
  return cmd_case() == kSetPreset;
}
inline void CloudCmd::set_has_setpreset() {
  _oneof_case_[0] = kSetPreset;
}
inline void CloudCmd::clear_setpreset() {
  if (has_setpreset()) {
    delete cmd_.setpreset_;
    clear_has_cmd();
  }
}
inline  const ::CloudPtzSetPreset& CloudCmd::setpreset() const {
  // @@protoc_insertion_point(field_get:CloudCmd.setPreset)
  return has_setpreset()
      ? *cmd_.setpreset_
      : ::CloudPtzSetPreset::default_instance();
}
inline ::CloudPtzSetPreset* CloudCmd::mutable_setpreset() {
  if (!has_setpreset()) {
    clear_cmd();
    set_has_setpreset();
    cmd_.setpreset_ = new ::CloudPtzSetPreset;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.setPreset)
  return cmd_.setpreset_;
}
inline ::CloudPtzSetPreset* CloudCmd::release_setpreset() {
  // @@protoc_insertion_point(field_release:CloudCmd.setPreset)
  if (has_setpreset()) {
    clear_has_cmd();
    ::CloudPtzSetPreset* temp = cmd_.setpreset_;
    cmd_.setpreset_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_setpreset(::CloudPtzSetPreset* setpreset) {
  clear_cmd();
  if (setpreset) {
    set_has_setpreset();
    cmd_.setpreset_ = setpreset;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.setPreset)
}

// .CloudPtzDelPreset delpreset = 303;
inline bool CloudCmd::has_delpreset() const {
  return cmd_case() == kDelpreset;
}
inline void CloudCmd::set_has_delpreset() {
  _oneof_case_[0] = kDelpreset;
}
inline void CloudCmd::clear_delpreset() {
  if (has_delpreset()) {
    delete cmd_.delpreset_;
    clear_has_cmd();
  }
}
inline  const ::CloudPtzDelPreset& CloudCmd::delpreset() const {
  // @@protoc_insertion_point(field_get:CloudCmd.delpreset)
  return has_delpreset()
      ? *cmd_.delpreset_
      : ::CloudPtzDelPreset::default_instance();
}
inline ::CloudPtzDelPreset* CloudCmd::mutable_delpreset() {
  if (!has_delpreset()) {
    clear_cmd();
    set_has_delpreset();
    cmd_.delpreset_ = new ::CloudPtzDelPreset;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.delpreset)
  return cmd_.delpreset_;
}
inline ::CloudPtzDelPreset* CloudCmd::release_delpreset() {
  // @@protoc_insertion_point(field_release:CloudCmd.delpreset)
  if (has_delpreset()) {
    clear_has_cmd();
    ::CloudPtzDelPreset* temp = cmd_.delpreset_;
    cmd_.delpreset_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_delpreset(::CloudPtzDelPreset* delpreset) {
  clear_cmd();
  if (delpreset) {
    set_has_delpreset();
    cmd_.delpreset_ = delpreset;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.delpreset)
}

// .CloudStartStreamReq startStreamReq = 401;
inline bool CloudCmd::has_startstreamreq() const {
  return cmd_case() == kStartStreamReq;
}
inline void CloudCmd::set_has_startstreamreq() {
  _oneof_case_[0] = kStartStreamReq;
}
inline void CloudCmd::clear_startstreamreq() {
  if (has_startstreamreq()) {
    delete cmd_.startstreamreq_;
    clear_has_cmd();
  }
}
inline  const ::CloudStartStreamReq& CloudCmd::startstreamreq() const {
  // @@protoc_insertion_point(field_get:CloudCmd.startStreamReq)
  return has_startstreamreq()
      ? *cmd_.startstreamreq_
      : ::CloudStartStreamReq::default_instance();
}
inline ::CloudStartStreamReq* CloudCmd::mutable_startstreamreq() {
  if (!has_startstreamreq()) {
    clear_cmd();
    set_has_startstreamreq();
    cmd_.startstreamreq_ = new ::CloudStartStreamReq;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.startStreamReq)
  return cmd_.startstreamreq_;
}
inline ::CloudStartStreamReq* CloudCmd::release_startstreamreq() {
  // @@protoc_insertion_point(field_release:CloudCmd.startStreamReq)
  if (has_startstreamreq()) {
    clear_has_cmd();
    ::CloudStartStreamReq* temp = cmd_.startstreamreq_;
    cmd_.startstreamreq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_startstreamreq(::CloudStartStreamReq* startstreamreq) {
  clear_cmd();
  if (startstreamreq) {
    set_has_startstreamreq();
    cmd_.startstreamreq_ = startstreamreq;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.startStreamReq)
}

// .CloudStartStreamResp startStreamResp = 402;
inline bool CloudCmd::has_startstreamresp() const {
  return cmd_case() == kStartStreamResp;
}
inline void CloudCmd::set_has_startstreamresp() {
  _oneof_case_[0] = kStartStreamResp;
}
inline void CloudCmd::clear_startstreamresp() {
  if (has_startstreamresp()) {
    delete cmd_.startstreamresp_;
    clear_has_cmd();
  }
}
inline  const ::CloudStartStreamResp& CloudCmd::startstreamresp() const {
  // @@protoc_insertion_point(field_get:CloudCmd.startStreamResp)
  return has_startstreamresp()
      ? *cmd_.startstreamresp_
      : ::CloudStartStreamResp::default_instance();
}
inline ::CloudStartStreamResp* CloudCmd::mutable_startstreamresp() {
  if (!has_startstreamresp()) {
    clear_cmd();
    set_has_startstreamresp();
    cmd_.startstreamresp_ = new ::CloudStartStreamResp;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.startStreamResp)
  return cmd_.startstreamresp_;
}
inline ::CloudStartStreamResp* CloudCmd::release_startstreamresp() {
  // @@protoc_insertion_point(field_release:CloudCmd.startStreamResp)
  if (has_startstreamresp()) {
    clear_has_cmd();
    ::CloudStartStreamResp* temp = cmd_.startstreamresp_;
    cmd_.startstreamresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_startstreamresp(::CloudStartStreamResp* startstreamresp) {
  clear_cmd();
  if (startstreamresp) {
    set_has_startstreamresp();
    cmd_.startstreamresp_ = startstreamresp;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.startStreamResp)
}

// .CloudStopStreamReq stopStreamReq = 403;
inline bool CloudCmd::has_stopstreamreq() const {
  return cmd_case() == kStopStreamReq;
}
inline void CloudCmd::set_has_stopstreamreq() {
  _oneof_case_[0] = kStopStreamReq;
}
inline void CloudCmd::clear_stopstreamreq() {
  if (has_stopstreamreq()) {
    delete cmd_.stopstreamreq_;
    clear_has_cmd();
  }
}
inline  const ::CloudStopStreamReq& CloudCmd::stopstreamreq() const {
  // @@protoc_insertion_point(field_get:CloudCmd.stopStreamReq)
  return has_stopstreamreq()
      ? *cmd_.stopstreamreq_
      : ::CloudStopStreamReq::default_instance();
}
inline ::CloudStopStreamReq* CloudCmd::mutable_stopstreamreq() {
  if (!has_stopstreamreq()) {
    clear_cmd();
    set_has_stopstreamreq();
    cmd_.stopstreamreq_ = new ::CloudStopStreamReq;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.stopStreamReq)
  return cmd_.stopstreamreq_;
}
inline ::CloudStopStreamReq* CloudCmd::release_stopstreamreq() {
  // @@protoc_insertion_point(field_release:CloudCmd.stopStreamReq)
  if (has_stopstreamreq()) {
    clear_has_cmd();
    ::CloudStopStreamReq* temp = cmd_.stopstreamreq_;
    cmd_.stopstreamreq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_stopstreamreq(::CloudStopStreamReq* stopstreamreq) {
  clear_cmd();
  if (stopstreamreq) {
    set_has_stopstreamreq();
    cmd_.stopstreamreq_ = stopstreamreq;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.stopStreamReq)
}

// .CloudStopStreamResp stopStreamResp = 404;
inline bool CloudCmd::has_stopstreamresp() const {
  return cmd_case() == kStopStreamResp;
}
inline void CloudCmd::set_has_stopstreamresp() {
  _oneof_case_[0] = kStopStreamResp;
}
inline void CloudCmd::clear_stopstreamresp() {
  if (has_stopstreamresp()) {
    delete cmd_.stopstreamresp_;
    clear_has_cmd();
  }
}
inline  const ::CloudStopStreamResp& CloudCmd::stopstreamresp() const {
  // @@protoc_insertion_point(field_get:CloudCmd.stopStreamResp)
  return has_stopstreamresp()
      ? *cmd_.stopstreamresp_
      : ::CloudStopStreamResp::default_instance();
}
inline ::CloudStopStreamResp* CloudCmd::mutable_stopstreamresp() {
  if (!has_stopstreamresp()) {
    clear_cmd();
    set_has_stopstreamresp();
    cmd_.stopstreamresp_ = new ::CloudStopStreamResp;
  }
  // @@protoc_insertion_point(field_mutable:CloudCmd.stopStreamResp)
  return cmd_.stopstreamresp_;
}
inline ::CloudStopStreamResp* CloudCmd::release_stopstreamresp() {
  // @@protoc_insertion_point(field_release:CloudCmd.stopStreamResp)
  if (has_stopstreamresp()) {
    clear_has_cmd();
    ::CloudStopStreamResp* temp = cmd_.stopstreamresp_;
    cmd_.stopstreamresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CloudCmd::set_allocated_stopstreamresp(::CloudStopStreamResp* stopstreamresp) {
  clear_cmd();
  if (stopstreamresp) {
    set_has_stopstreamresp();
    cmd_.stopstreamresp_ = stopstreamresp;
  }
  // @@protoc_insertion_point(field_set_allocated:CloudCmd.stopStreamResp)
}

inline bool CloudCmd::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void CloudCmd::clear_has_cmd() {
  _oneof_case_[0] = CMD_NOT_SET;
}
inline CloudCmd::CmdCase CloudCmd::cmd_case() const {
  return CloudCmd::CmdCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CloudCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CloudCmdType>() {
  return ::CloudCmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_h5scloud_2eproto__INCLUDED
